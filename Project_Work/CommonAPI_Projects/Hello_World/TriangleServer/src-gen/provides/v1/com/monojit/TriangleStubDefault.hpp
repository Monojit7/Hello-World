/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Mon Nov 14 16:54:17 IST 2016
*/
#ifndef V1_COM_MONOJIT_Triangle_STUB_DEFAULT_HPP_
#define V1_COM_MONOJIT_Triangle_STUB_DEFAULT_HPP_


#include <v1/com/monojit/TriangleStub.hpp>
#include <sstream>

namespace v1 {
namespace com {
namespace monojit {

/**
 * Provides a default implementation for TriangleStubRemoteEvent and
 * TriangleStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class TriangleStubDefault
    : public virtual TriangleStub {
public:
    TriangleStubDefault();

    TriangleStubRemoteEvent* initStubAdapter(const std::shared_ptr<TriangleStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);

    virtual const uint32_t& getHeightAttribute();
    virtual const uint32_t& getHeightAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setHeightAttribute(uint32_t _value);
    virtual void setHeightAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint32_t _value);
    virtual const uint32_t& getWidthAttribute();
    virtual const uint32_t& getWidthAttribute(const std::shared_ptr<CommonAPI::ClientId> _client);
    virtual void setWidthAttribute(uint32_t _value);
    virtual void setWidthAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint32_t _value);

    /**
     * description: Example comment
     */
    virtual void Area(const std::shared_ptr<CommonAPI::ClientId> _client, AreaReply_t _reply);

virtual void fireAreaResultEvent(const std::string &_e);


protected:
    virtual bool trySetHeightAttribute(uint32_t _value);
    virtual bool validateHeightAttributeRequestedValue(const uint32_t &_value);
    virtual void onRemoteHeightAttributeChanged();
    virtual bool trySetWidthAttribute(uint32_t _value);
    virtual bool validateWidthAttributeRequestedValue(const uint32_t &_value);
    virtual void onRemoteWidthAttributeChanged();
    class RemoteEventHandler: public virtual TriangleStubRemoteEvent {
    public:
        RemoteEventHandler(TriangleStubDefault *_defaultStub);

        virtual bool onRemoteSetHeightAttribute(uint32_t _value);
        virtual bool onRemoteSetHeightAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint32_t _value);
        virtual void onRemoteHeightAttributeChanged();

        virtual bool onRemoteSetWidthAttribute(uint32_t _value);
        virtual bool onRemoteSetWidthAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint32_t _value);
        virtual void onRemoteWidthAttributeChanged();


    private:
        TriangleStubDefault *defaultStub_;
    };
private:
    TriangleStubDefault::RemoteEventHandler remoteEventHandler_;

    uint32_t heightAttributeValue_ {};
    uint32_t widthAttributeValue_ {};

    CommonAPI::Version interfaceVersion_;
};

} // namespace monojit
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_MONOJIT_Triangle_STUB_DEFAULT
