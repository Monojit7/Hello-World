/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Mon Nov 14 16:54:17 IST 2016
 */

#include "v1/com/monojit/TriangleStubImpl.hpp"
#include <unistd.h>
//extern std::shared_ptr<v1::com::monojit::TriangleStubImpl> svcTriangle;
namespace v1 {
namespace com {
namespace monojit {

TriangleStubImpl::TriangleStubImpl()
{
	this->setHeightAttribute(0);
	this->setWidthAttribute(0);
}

TriangleStubImpl::~TriangleStubImpl()
{

}

void TriangleStubImpl::Area(const std::shared_ptr<CommonAPI::ClientId> _client, AreaReply_t reply)
{
	std::cout << "TriangleStubImpl::Area" << std::endl;
	reply("Monojit");
	/*for (uint32_t x = 0; x < 30; x++)
	{
	std::cout << "Waiting for 2 seconds" << std::endl;
	sleep(0.5);
	this->setHeightAttribute(x);
		if (x % 2 == 0)
		{
			fireAreaResultEvent("Firing Monojit");
		}
	}*/
	fireAreaResultEvent("firing event broadcast");
	
}


void TriangleStubImpl::onRemoteWidthAttributeChanged()
{
	std::cout << "onRemoteWidthAttributeChanged: " << this->getWidthAttribute() << std::endl;

}

bool TriangleStubImpl::onRemoteSetWidthAttribute(uint32_t _value)
{
	std::cout << "onRemoteSetWidthAttribute: " << _value << std::endl;
	return true;
}
bool TriangleStubImpl::onRemoteSetWidthAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, uint32_t _value)
{
	std::cout << "onRemoteSetWidthAttribute: Client id " << _value << std::endl;
	return true;
}






} // namespace monojit
} // namespace com
} // namespace v1

