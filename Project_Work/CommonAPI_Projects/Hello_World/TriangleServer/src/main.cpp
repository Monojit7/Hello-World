/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Mon Nov 14 16:54:17 IST 2016
 */

#include <thread>

#include <CommonAPI/CommonAPI.hpp>
#include "provides/v1/com/monojit/TriangleStubImpl.hpp"
std::shared_ptr<v1::com::monojit::TriangleStubImpl> svcTriangle;

int main(int argc, char **argv) {
	CommonAPI::Runtime::setProperty("LogContext", "TriangleServer");
	CommonAPI::Runtime::setProperty("LibraryBase", "TriangleServer");

	/*
	 * create the runtime
	 */
	std::shared_ptr<CommonAPI::Runtime> runtime = CommonAPI::Runtime::get();
	if(!runtime)
	{
		// Error: could not load runtime
		return 1;
	}
	
	std::string domain = "local";
	std::string connection = "TriangleServer";

	{
		std::string instance = "TriangleServer.TriangleServerInstance";
		svcTriangle = std::make_shared<v1::com::monojit::TriangleStubImpl>();
		runtime->registerService(domain, instance, svcTriangle, connection);
	}


	std::cout << "Server Instance is created for TraingleServer" << std::endl;
    
    while (true) {
        //std::cout << "Waiting for calls... (Abort with CTRL+C)" << std::endl;
        std::this_thread::sleep_for(std::chrono::seconds(60));
    }
    return 0;
}
