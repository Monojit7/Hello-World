/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core .
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
/**
 * description: The interface towards the Controlling Instance (e.g. HMI). It handles the
 *   communication towards the HMI and other system components who need to interact
 *   with the Vehicle Settings.
 * author: Pramod kumar kar, Yogesh sharma
 */
#ifndef V1_COM_HARMAN_VEHICLE_VEHICLE_SETTINGS_HPP_
#define V1_COM_HARMAN_VEHICLE_VEHICLE_SETTINGS_HPP_




#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Types.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace harman {
namespace vehicle {

class VehicleSettings {
public:
    virtual ~VehicleSettings() { }

    static inline const char* getInterface();
    static inline CommonAPI::Version getInterfaceVersion();
};

const char* VehicleSettings::getInterface() {
    return ("com.harman.vehicle.VehicleSettings");
}

CommonAPI::Version VehicleSettings::getInterfaceVersion() {
    return CommonAPI::Version(1, 0);
}


} // namespace vehicle
} // namespace harman
} // namespace com
} // namespace v1

namespace CommonAPI {
}


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_HARMAN_VEHICLE_VEHICLE_SETTINGS_HPP_
