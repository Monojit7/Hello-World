/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Tue Jun 21 15:32:43 IST 2016
*/
/**
 * author: Rico Schuster
 * description: Configuration interface which extends the ConfigurationBase interface to be
 *   able to set several configuration values.
    Note: Usually Franca supports
 *   the extension of Interface via "extends" keyword. But Mocca is not able to
 *   handle the inheritance of Interfaces.
    Therefore all Methods of
 *   ConfigurationBase are also part of the Configuration Interface.
 * see: org.harman.nav.ctrl.configuration.ConfigurationBase.fidl
 * see: ConfigurationBase
 */
#ifndef V1_ORG_HARMAN_NAV_CTRL_CONFIGURATION_CONFIGURATION_HPP_
#define V1_ORG_HARMAN_NAV_CTRL_CONFIGURATION_CONFIGURATION_HPP_




#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Types.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace org {
namespace harman {
namespace nav {
namespace ctrl {
namespace configuration {

class Configuration {
public:
    virtual ~Configuration() { }

    static inline const char* getInterface();
    static inline CommonAPI::Version getInterfaceVersion();
};

const char* Configuration::getInterface() {
    return ("org.harman.nav.ctrl.configuration.Configuration");
}

CommonAPI::Version Configuration::getInterfaceVersion() {
    return CommonAPI::Version(1, 0);
}


} // namespace configuration
} // namespace ctrl
} // namespace nav
} // namespace harman
} // namespace org
} // namespace v1

namespace CommonAPI {
}


// Compatibility
namespace v1_0 = v1;

#endif // V1_ORG_HARMAN_NAV_CTRL_CONFIGURATION_CONFIGURATION_HPP_
