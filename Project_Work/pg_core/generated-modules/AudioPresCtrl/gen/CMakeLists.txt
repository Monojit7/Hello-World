# generated by Voice CodeGen Version: R1_v1.3.0
# generated on: Sat Jun 25 13:26:41 IST 2016
#cmake -D CMAKE_SYSROOT=<SYSROOT_PATH> ..

cmake_minimum_required(VERSION 2.6)
add_definitions($ENV{CXXFLAGS} $ENV{LDFLAGS})

include_directories(./dbus/provides)

include_directories(./dbus/consumes)


IF (WIN32)
  include_directories(../../../deliveries/commonapi/include)
  include_directories(../../../deliveries/dbus/include)
ELSE()
  include_directories(${CMAKE_SYSROOT}/usr/include)
  include_directories(${CMAKE_SYSROOT}/usr/include/CommonAPI-3.1)
ENDIF()

include_directories(./../src-gen/provides)
include_directories(./../src-gen/consumes)

IF (WIN32)
	link_directories(../../../deploy/win/lib)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /bigobj -Wall -std=c++11")
ELSE()
	link_directories(${CMAKE_SYSROOT}/usr/lib)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
	include(FindPkgConfig)
	if (MSVC)
	#Not beautiful, but it works
	if (DBus_DIR)
		if (DBus_BUILD_DIR)
		set(DBus_INCLUDE_DIRS "${DBus_DIR};${DBus_BUILD_DIR};")
		else ()
		message (FATAL_ERROR "DBus_BUILD_DIR not set! Cannot continue.")
		endif ()
	else()
	message (FATAL_ERROR "DBus_DIR not set! Cannot continue.")
	endif ()
	else()
	pkg_check_modules(DBus REQUIRED dbus-1>=1.4)
	endif()
ENDIF()


OPTION(USE_INSTALLED_COMMONAPI "Set to OFF to use the local (build tree) version of CommonAPI" ON)
message(STATUS "USE_INSTALLED_COMMONAPI is set to value: ${USE_INSTALLED_COMMONAPI}")
if ("${USE_INSTALLED_COMMONAPI}" STREQUAL "ON")
endif()

message(STATUS "CommonAPI_CONSIDERED_CONFIGS: ${CommonAPI_CONSIDERED_CONFIGS}")
message(STATUS "COMMONAPI_INCLUDE_DIRS: ${COMMONAPI_INCLUDE_DIRS}")

message(STATUS "CommonAPI-DBus_CONSIDERED_CONFIGS: ${CommonAPI-DBus_CONSIDERED_CONFIGS}")
message(STATUS "COMMONAPI_DBUS_INCLUDE_DIRS: ${COMMONAPI_DBUS_INCLUDE_DIRS}")


IF (WIN32)
	include_directories(
	../../../deliveries/commonapi/include
	../../../deliveries/dbus/include
	)

	link_directories(
	../../../deploy/win/lib
	)
ELSE()
	include_directories(
	${COMMONAPI_INCLUDE_DIRS}
	${COMMONAPI_DBUS_INCLUDE_DIRS}
	${DBus_INCLUDE_DIRS}
	)
	link_directories(
	${COMMONAPI_LIBDIR}
	${COMMONAPI_DBUS_LIBDIR}
	${DBus_INCLUDE_DIRS}/dbus/.libs
	)
ENDIF()




add_library(AudioPresCtrl-dbus
SHARED 
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlDiagDBusStubAdapter.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlDiagDBusDeployment.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlTypesDBusDeployment.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlControlsDBusStubAdapter.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlControlsDBusDeployment.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlTypesDBusDeployment.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlSettingsDBusStubAdapter.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlSettingsDBusDeployment.cpp
dbus/provides/v1/com/harman/audio/audioPresCtrl/audioPresCtrlTypesDBusDeployment.cpp
dbus/consumes/v3/org/genivi/am/commandinterface/CommandControlDBusProxy.cpp
dbus/consumes/v3/org/genivi/am/commandinterface/CommandControlDBusDeployment.cpp
dbus/consumes/v3/org/genivi/am_tDBusDeployment.cpp
dbus/consumes/v0/com/harman/audio/waveplayer/wavePlayerDBusProxy.cpp
dbus/consumes/v0/com/harman/audio/waveplayer/wavePlayerDBusDeployment.cpp
dbus/consumes/v0/com/harman/audio/waveplayer/wavePlayerTypeDBusDeployment.cpp
dbus/consumes/v0/com/harman/audio/ecnr/ecnrDBusProxy.cpp
dbus/consumes/v0/com/harman/audio/ecnr/ecnrDBusDeployment.cpp
dbus/consumes/v0/com/harman/audio/ecnr/ecnrTypeDBusDeployment.cpp
dbus/consumes/v1/com/harman/InputCtrl/InputCtrlDBusProxy.cpp
dbus/consumes/v1/com/harman/InputCtrl/InputCtrlDBusDeployment.cpp
dbus/consumes/v1/com/harman/InputCtrl/InputCtrlTypeDBusDeployment.cpp
dbus/consumes/v2/org/genivi/NodeStateManager/ConsumerDBusProxy.cpp
dbus/consumes/v2/org/genivi/NodeStateManager/ConsumerDBusDeployment.cpp
dbus/consumes/v2/org/genivi/NodeStateManager/NodeStateTypesDBusDeployment.cpp
)
target_link_libraries(AudioPresCtrl-dbus CommonAPI CommonAPI-DBus)

