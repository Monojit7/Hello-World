/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Sep 21 21:11:40 IST 2016
 */

#include "v1/com/harman/audio/audioPresCtrl/audioPresCtrlSettingsStubImpl.hpp"

namespace v1 {
namespace com {
namespace harman {
namespace audio {
namespace audioPresCtrl {

audioPresCtrlSettingsStubImpl::audioPresCtrlSettingsStubImpl()
{

}

audioPresCtrlSettingsStubImpl::~audioPresCtrlSettingsStubImpl()
{

}

void audioPresCtrlSettingsStubImpl::SetVolume(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t absoluteVolume)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::SetVolumeStep(const std::shared_ptr<CommonAPI::ClientId> _client, int16_t volumeStep)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::SetSourceVolume(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::sSourceVolume volume, SetSourceVolumeReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::GetSourceVolume(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, GetSourceVolumeReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::ToggleActiveSrcMute(const std::shared_ptr<CommonAPI::ClientId> _client)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::SetSourceMute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, bool mute)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::ToggleMicMute(const std::shared_ptr<CommonAPI::ClientId> _client)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::GetList(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eUserOption listType, GetListReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::GetSourceMute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, GetSourceMuteReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::ToggleMasterMute(const std::shared_ptr<CommonAPI::ClientId> _client)
{
	// TODO: Implement me
}

void audioPresCtrlSettingsStubImpl::setAudioAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::mAttribute attributesmap)
{
	// TODO: Implement me
}


} // namespace audioPresCtrl
} // namespace audio
} // namespace harman
} // namespace com
} // namespace v1

