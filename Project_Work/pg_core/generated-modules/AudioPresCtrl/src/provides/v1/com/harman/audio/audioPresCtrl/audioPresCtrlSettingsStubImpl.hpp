/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Sep 21 21:11:40 IST 2016
 */

#ifndef V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLSETTINGSSTUBIMPL_HPP
#define V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLSETTINGSSTUBIMPL_HPP

#include <CommonAPI/CommonAPI.hpp>
#include "v1/com/harman/audio/audioPresCtrl/audioPresCtrlSettingsStubDefault.hpp"

namespace v1 {
namespace com {
namespace harman {
namespace audio {
namespace audioPresCtrl {

class audioPresCtrlSettingsStubImpl : public v1::com::harman::audio::audioPresCtrl::audioPresCtrlSettingsStubDefault
{

public:
	audioPresCtrlSettingsStubImpl();
    virtual ~audioPresCtrlSettingsStubImpl();

	virtual void SetVolume(const std::shared_ptr<CommonAPI::ClientId> _client, uint16_t absoluteVolume);
	virtual void SetVolumeStep(const std::shared_ptr<CommonAPI::ClientId> _client, int16_t volumeStep);
	virtual void SetSourceVolume(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::sSourceVolume volume, SetSourceVolumeReply_t);
	virtual void GetSourceVolume(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, GetSourceVolumeReply_t);
	virtual void ToggleActiveSrcMute(const std::shared_ptr<CommonAPI::ClientId> _client);
	virtual void SetSourceMute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, bool mute);
	virtual void ToggleMicMute(const std::shared_ptr<CommonAPI::ClientId> _client);
	virtual void GetList(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eUserOption listType, GetListReply_t);
	virtual void GetSourceMute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::SourceId sourceID, GetSourceMuteReply_t);
	virtual void ToggleMasterMute(const std::shared_ptr<CommonAPI::ClientId> _client);
	virtual void setAudioAttribute(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::mAttribute attributesmap);
};

} // namespace audioPresCtrl
} // namespace audio
} // namespace harman
} // namespace com
} // namespace v1

#endif //V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLSETTINGSSTUBIMPL_HPP
