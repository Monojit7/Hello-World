/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Sep 21 21:11:40 IST 2016
 */

#include "v1/com/harman/audio/audioPresCtrl/audioPresCtrlControlsStubImpl.hpp"

namespace v1 {
namespace com {
namespace harman {
namespace audio {
namespace audioPresCtrl {

audioPresCtrlControlsStubImpl::audioPresCtrlControlsStubImpl()
{

}

audioPresCtrlControlsStubImpl::~audioPresCtrlControlsStubImpl()
{

}

void audioPresCtrlControlsStubImpl::SetEntertainmentSrc(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eEntertainmentSrcs sourceId, SetEntertainmentSrcReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlControlsStubImpl::SetSourceGroup(const std::shared_ptr<CommonAPI::ClientId> _client, std::string sourceGroupName, SetSourceGroupReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlControlsStubImpl::ToggleInSourceGroup(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eToggleDirection direction, ToggleInSourceGroupReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlControlsStubImpl::ToggleSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eToggleDirection direction, ToggleSourceReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlControlsStubImpl::RequestInformationSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eInterruptSrcs sourceID, RequestInformationSourceReply_t reply)
{
	// TODO: Implement me
}

void audioPresCtrlControlsStubImpl::ReleaseInformationSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eInterruptSrcs sourceID, ReleaseInformationSourceReply_t reply)
{
	// TODO: Implement me
}


} // namespace audioPresCtrl
} // namespace audio
} // namespace harman
} // namespace com
} // namespace v1

