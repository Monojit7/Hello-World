/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Sep 21 21:11:40 IST 2016
 */

#ifndef V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLCONTROLSSTUBIMPL_HPP
#define V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLCONTROLSSTUBIMPL_HPP

#include <CommonAPI/CommonAPI.hpp>
#include "v1/com/harman/audio/audioPresCtrl/audioPresCtrlControlsStubDefault.hpp"

namespace v1 {
namespace com {
namespace harman {
namespace audio {
namespace audioPresCtrl {

class audioPresCtrlControlsStubImpl : public v1::com::harman::audio::audioPresCtrl::audioPresCtrlControlsStubDefault
{

public:
	audioPresCtrlControlsStubImpl();
    virtual ~audioPresCtrlControlsStubImpl();

	virtual void SetEntertainmentSrc(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eEntertainmentSrcs sourceId, SetEntertainmentSrcReply_t);
	virtual void SetSourceGroup(const std::shared_ptr<CommonAPI::ClientId> _client, std::string sourceGroupName, SetSourceGroupReply_t);
	virtual void ToggleInSourceGroup(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eToggleDirection direction, ToggleInSourceGroupReply_t);
	virtual void ToggleSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eToggleDirection direction, ToggleSourceReply_t);
	virtual void RequestInformationSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eInterruptSrcs sourceID, RequestInformationSourceReply_t);
	virtual void ReleaseInformationSource(const std::shared_ptr<CommonAPI::ClientId> _client, ::v1::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::eInterruptSrcs sourceID, ReleaseInformationSourceReply_t);
};

} // namespace audioPresCtrl
} // namespace audio
} // namespace harman
} // namespace com
} // namespace v1

#endif //V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_AUDIOPRESCTRLCONTROLSSTUBIMPL_HPP
