/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Tue Oct 04 15:43:40 EDT 2016
*/
#ifndef V1_COM_HARMAN_INPUTCTRL_Input_Ctrl_PROXY_BASE_HPP_
#define V1_COM_HARMAN_INPUTCTRL_Input_Ctrl_PROXY_BASE_HPP_

#include <v1/com/harman/InputCtrl/InputCtrl.hpp>


#include <v1/com/harman/InputCtrl/InputCtrlType.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <vector>

#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace harman {
namespace InputCtrl {

class InputCtrlProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyMuteEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyPushToTalkEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyAcceptCallEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyRejectCallEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeySettingsEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeySeekLeftEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeySeekRightEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyPlayPauseEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyDisplayEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeySoundEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyOnOffEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::RotaryInfoStruct
    > KeyTuneRotaryEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct, int16_t
    > KeyTuneUpEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct, int16_t
    > KeyTuneDownEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::RotaryInfoStruct
    > KeyVolumeRotaryEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::RotaryInfoStruct
    > KeyVolumeUpEvent;
    typedef CommonAPI::Event<
        ::v1::com::harman::InputCtrl::InputCtrlType::RotaryInfoStruct
    > KeyVolumeDownEvent;
    typedef CommonAPI::Event<
        std::vector<::v1::com::harman::InputCtrl::InputCtrlType::eKeys>, ::v1::com::harman::InputCtrl::InputCtrlType::ButtonInfoStruct
    > KeyCombinationEvent;



    virtual KeyMuteEvent& getKeyMuteEvent() = 0;
    virtual KeyPushToTalkEvent& getKeyPushToTalkEvent() = 0;
    virtual KeyAcceptCallEvent& getKeyAcceptCallEvent() = 0;
    virtual KeyRejectCallEvent& getKeyRejectCallEvent() = 0;
    virtual KeySettingsEvent& getKeySettingsEvent() = 0;
    virtual KeySeekLeftEvent& getKeySeekLeftEvent() = 0;
    virtual KeySeekRightEvent& getKeySeekRightEvent() = 0;
    virtual KeyPlayPauseEvent& getKeyPlayPauseEvent() = 0;
    virtual KeyDisplayEvent& getKeyDisplayEvent() = 0;
    virtual KeySoundEvent& getKeySoundEvent() = 0;
    virtual KeyOnOffEvent& getKeyOnOffEvent() = 0;
    virtual KeyTuneRotaryEvent& getKeyTuneRotaryEvent() = 0;
    virtual KeyTuneUpEvent& getKeyTuneUpEvent() = 0;
    virtual KeyTuneDownEvent& getKeyTuneDownEvent() = 0;
    virtual KeyVolumeRotaryEvent& getKeyVolumeRotaryEvent() = 0;
    virtual KeyVolumeUpEvent& getKeyVolumeUpEvent() = 0;
    virtual KeyVolumeDownEvent& getKeyVolumeDownEvent() = 0;
    virtual KeyCombinationEvent& getKeyCombinationEvent() = 0;

};

} // namespace InputCtrl
} // namespace harman
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_HARMAN_INPUTCTRL_Input_Ctrl_PROXY_BASE_HPP_
