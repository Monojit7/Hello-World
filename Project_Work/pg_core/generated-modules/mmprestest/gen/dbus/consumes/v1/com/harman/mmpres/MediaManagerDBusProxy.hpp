/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* generated by Voice CodeGen Version: R1_v1.3.0
* generated on: Wed Oct 26 18:16:09 IST 2016
*/
#ifndef V1_COM_HARMAN_MMPRES_Media_Manager_DBUS_PROXY_HPP_
#define V1_COM_HARMAN_MMPRES_Media_Manager_DBUS_PROXY_HPP_

#include <v1/com/harman/mmpres/MediaManagerProxyBase.hpp>
#include "v1/com/harman/mmpres/MediaManagerDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusEvent.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v1 {
namespace com {
namespace harman {
namespace mmpres {

class MediaManagerDBusProxy
    : virtual public MediaManagerProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    MediaManagerDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~MediaManagerDBusProxy() { }


    virtual SlotUpdateEvent& getSlotUpdateEvent();

    /**
     * description: Gets details for all the configured slots in the pres ctrl. Whichever slots are
     *   configured in the Presentation Controller config will be returned here, with
     *   the 
    					  current status. 
    	 		     
             returns:	  tSlotList:	Slot data
     */
    virtual void getSlots(CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::mmpres::MMPresTypes::tSlotList &_list, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> getSlotsAsync(GetSlotsAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   

    CommonAPI::DBus::DBusEvent<SlotUpdateEvent, CommonAPI::Deployable<::v1::com::harman::mmpres::MMPresTypes::tSlot, ::v1::com::harman::mmpres::MMPresTypes_::tSlotDeployment_t>> slotUpdate_;

};

} // namespace mmpres
} // namespace harman
} // namespace com
} // namespace v1

#endif // V1_COM_HARMAN_MMPRES_Media_Manager_DBUS_PROXY_HPP_

