package org.harman.nav.ctrl

typeCollection CommonTypes {

	<** @description: version.**>			
	struct Version {
		<** @description : when the major changes, then backward compatibility with previous releases is not granted.**>
		UInt16 ^versionMajor
		<** @description : when the minor changes, then backward compatibility with previous releases is granted, but something changed in the implementation of the API (e.g. new methods may have been added).**>
		UInt16 ^versionMinor
		<** @description : when the micro changes, then backward compatibility with previous releases is granted (bug fixes or documentation modifications).**>
		UInt16 ^versionMicro
		<** @description : release date (e.g. 21-06-2011).**>
		String date
	}

	typedef Handle is UInt32

	struct Coordinate2D {
		Double latitude
		Double longitude
	}

	struct Coordinate3D extends Coordinate2D {
		Int32 altitude
	}

	array Polygon of Coordinate2D
	
	typedef Area is Polygon

	struct Rectangle {
		Coordinate2D topLeft
		Coordinate2D bottomRight
	}

	enumeration BasicEnum {
		INVALID = "0x0000"
	}

	typedef Timestamp is UInt64
	
	typedef Distance is Double
	
	typedef LinkId is ByteBuffer
	
	<**
		@description : Type to represent distances and lengths. Unit is decimeter (=0.1 m = 10 cm). This unit was chosen because:
		- it is small enough to represent "feet" distances in a unique way (e.g. when distances to maneuver points are displayed in feet units), and
		- for smaller units, like cm or mm, the maximum 32 bit value would be close to possible route lengths (2^32 dm ~ 400,000 km, which is 10 times around the world).
		This type was chosen to be "unsigned" because no use case with negative distances was found.
	**>
	typedef TDistance_dm is UInt32
	
	typedef TTime_sec is UInt32
	
	
	///// definition of icon related types
	struct SIcon
	{
		Int32 dummy
	}

}