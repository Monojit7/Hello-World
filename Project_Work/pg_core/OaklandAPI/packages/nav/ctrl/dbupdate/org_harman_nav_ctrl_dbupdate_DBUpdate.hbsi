<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<DSI>
<Name>org_harman_nav_ctrl_dbupdate_DBUpdate</Name>
   <ID>2</ID>
   <Extern>true</Extern>
	<Version>
      <Major>1</Major>
      <Minor>0</Minor>
   </Version>
   <Includes>
   
   <Include>
         <Name>api/nav/ctrl/pf/dbupdate/org_harman_nav_ctrl_dbupdate_DBUpdateTypes.hbtd</Name>
         <Major>1</Major>
         <Minor>0</Minor>
   </Include>
   </Includes>
   
   
	  <Enums>
        <Enum>
         <Name>Error</Name>
          <ID>2</ID>
         <Description>This is the type for error responses.</Description>
         <EnumIDs>
	         <EnumID>
	            <Name>ERROR_updateList_E_AUTOMODE_ACTIVE</Name>
	            <ID>3</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_updateList_E_NO_ONLINE_SERVICE</Name>
	            <ID>4</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_AUTOMODE_ACTIVE</Name>
	            <ID>5</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_NO_ONLINE_SERVICE</Name>
	            <ID>6</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_PATCH_NOT_AVAILABLE</Name>
	            <ID>7</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_PATCH_NOT_APPLICABLE</Name>
	            <ID>8</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_VERIFICATION_FAILURE</Name>
	            <ID>9</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_applyUpdate_E_RESSOURCE_BUSY</Name>
	            <ID>10</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_cancelUpdate_E_AUTOMODE_ACTIVE</Name>
	            <ID>11</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_cancelUpdate_E_UPDATE_NOT_ACTIVE</Name>
	            <ID>12</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_finalizeUpdate_E_UPDATE_NOT_ACTIVE</Name>
	            <ID>13</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_finalizeUpdate_E_INVALID_SYSTEM_STATE</Name>
	            <ID>14</ID>
	         </EnumID>

    </EnumIDs>
    </Enum>
</Enums>

   <DataTypes>
   </DataTypes>
	<Attributes>
		      <Attribute>
		         <Name>aautoModus</Name>
		         <Description>enable/disable the automode for the iu
		             
		            The auto-mode is by default enabled. In auto mode the
		            dbupdate happens in background and is more or less completely
		            opaque for the customer/driver. In general, the dbupdate ctrl
		            checks for updates in a cycle manner (every updateTime_sec seconds)
		            or based on online notifications (which must supported by project).
		            If an update is available, a download progress is initiated automatically.
		            As soon as the update is applied, the client gets notified about
		            the option to restart the system in order to work on the latest DB.
		            This is done by attribute outstandingUpdates. Anyway the client
		            can ignore this notification and with the next lifecycle the latest
		            dbversion is used.
		            If the automodus is disabled, the client must manually initiate
		            any update process. For further details see requestUpdateList
		            and requestApplyUpdate.</Description>
		         <ID>15</ID>
		<Type>bool</Type>
		         
		         <Notify>OnChange</Notify>
		      </Attribute>
		      <Attribute>
		         <Name>aoutstandingUpdates</Name>
		         <Description>an indication on how many updates are ready to be applied
		           This attribute allow the client to get feedback about the
		           current update status. All updates that were downloaded and
		           applied will increase this counter. Due to the fact that the
		           DB itself must be switch after the update was applied 
		           successfully, the client can decide to trigger an system restart
		           to get the latest update available for his current navigation.
		           The interpretation of this attribute is very simple:
		           outstandingUpdates!=0 - restart in order to switch to new database
		           outstandingUpdates==0 - nothing to do 
		           The client can use see requestFinalizeUpdate to initialize a HU restart.
		           With the next lifecylce of the system, the updates will be finalized
		           automatically. In this case the outstandingUpdates will be reset
		           to zero.</Description>
		         <ID>16</ID>
		<Type>Int8</Type>
		         
		         <Notify>OnChange</Notify>
		      </Attribute>
		      <Attribute>
		         <Name>adealerUpdateProgress</Name>
		         <Description>progress indication for dealer-update process
		           This indication allows to give feedback about the progress
		           when running a dealer update (don't mix up with incremental
		           update). The valid range is between 0 and 100. As soon
		           as the complete update is applied, the outstandingUpdates
		           attribute will be increased to 1 and the fullUpdateProgress
		           will indicate 100 (percent). 
		           In normal mode (meaning no update device is plugged to HU)
		           the fullUpdateProgress will always be equal to 0 which indicates
		           no full update progress in process.</Description>
		         <ID>17</ID>
		<Type>UInt8</Type>
		         
		         <Notify>OnChange</Notify>
		      </Attribute>
		      <Attribute>
		         <Name>aversionId</Name>
		         <Description>human readable version information of the database conglomerate
		           This attribute is used to give the customer/driver information about
		           the database that is currently available on his system.</Description>
		         <ID>18</ID>
		<Type>org_harman_nav_ctrl_dbupdate_DBUpdateTypes::SVersion</Type>
		         
		         <Notify>OnChange</Notify>
		      </Attribute>
	</Attributes>
<Methods>
		<Method>
		
		   <Name>SetAutoModus</Name>
		   <ID>1100</ID>
		         <Type>Request</Type>
		  		   <Description>enable/disable the automode for the iu
		  		       
		  		      The auto-mode is by default enabled. In auto mode the
		  		      dbupdate happens in background and is more or less completely
		  		      opaque for the customer/driver. In general, the dbupdate ctrl
		  		      checks for updates in a cycle manner (every updateTime_sec seconds)
		  		      or based on online notifications (which must supported by project).
		  		      If an update is available, a download progress is initiated automatically.
		  		      As soon as the update is applied, the client gets notified about
		  		      the option to restart the system in order to work on the latest DB.
		  		      This is done by attribute outstandingUpdates. Anyway the client
		  		      can ignore this notification and with the next lifecycle the latest
		  		      dbversion is used.
		  		      If the automodus is disabled, the client must manually initiate
		  		      any update process. For further details see requestUpdateList
		  		      and requestApplyUpdate.</Description>
		<Response>SetAutoModus</Response>
		  		   <Parameters>
			  		   <Parameter>
		<Name>s_AutoModus</Name>
		                   <Description>enable/disable the automode for the iu
		                       
		                      The auto-mode is by default enabled. In auto mode the
		                      dbupdate happens in background and is more or less completely
		                      opaque for the customer/driver. In general, the dbupdate ctrl
		                      checks for updates in a cycle manner (every updateTime_sec seconds)
		                      or based on online notifications (which must supported by project).
		                      If an update is available, a download progress is initiated automatically.
		                      As soon as the update is applied, the client gets notified about
		                      the option to restart the system in order to work on the latest DB.
		                      This is done by attribute outstandingUpdates. Anyway the client
		                      can ignore this notification and with the next lifecycle the latest
		                      dbversion is used.
		                      If the automodus is disabled, the client must manually initiate
		                      any update process. For further details see requestUpdateList
		                      and requestApplyUpdate.</Description>
		                   <ID>20</ID>
		<Type>bool</Type>
		                    <IsDefault>false</IsDefault>
			  		   </Parameter>
		  		   </Parameters>
		</Method>
		<Method>
		<Name>SetAutoModus</Name>
		         <ID>2100</ID>
		         <Type>Response</Type>
		  		   <Description>enable/disable the automode for the iu
		  		       
		  		      The auto-mode is by default enabled. In auto mode the
		  		      dbupdate happens in background and is more or less completely
		  		      opaque for the customer/driver. In general, the dbupdate ctrl
		  		      checks for updates in a cycle manner (every updateTime_sec seconds)
		  		      or based on online notifications (which must supported by project).
		  		      If an update is available, a download progress is initiated automatically.
		  		      As soon as the update is applied, the client gets notified about
		  		      the option to restart the system in order to work on the latest DB.
		  		      This is done by attribute outstandingUpdates. Anyway the client
		  		      can ignore this notification and with the next lifecycle the latest
		  		      dbversion is used.
		  		      If the automodus is disabled, the client must manually initiate
		  		      any update process. For further details see requestUpdateList
		  		      and requestApplyUpdate.</Description>
		  		   <Parameters>
			  		   <Parameter>
		<Name>s_AutoModus</Name>
		                   <Description>enable/disable the automode for the iu
		                       
		                      The auto-mode is by default enabled. In auto mode the
		                      dbupdate happens in background and is more or less completely
		                      opaque for the customer/driver. In general, the dbupdate ctrl
		                      checks for updates in a cycle manner (every updateTime_sec seconds)
		                      or based on online notifications (which must supported by project).
		                      If an update is available, a download progress is initiated automatically.
		                      As soon as the update is applied, the client gets notified about
		                      the option to restart the system in order to work on the latest DB.
		                      This is done by attribute outstandingUpdates. Anyway the client
		                      can ignore this notification and with the next lifecycle the latest
		                      dbversion is used.
		                      If the automodus is disabled, the client must manually initiate
		                      any update process. For further details see requestUpdateList
		                      and requestApplyUpdate.</Description>
		                   <ID>22</ID>
		<Type>bool</Type>
		                    <IsDefault>false</IsDefault>
			  		   </Parameter>
		  		   </Parameters>
		</Method>
			<Method>
			
			   <Name>updateList</Name>
			   <ID>1200</ID>
			         <Type>Request</Type>
			  		   <Description>manual request for search for available updates  
			  		     This method is used in case of auto-mode off. A
			  		     client can use this method to a list of available
			  		     updates for his HU. By specifying the E_RequestMode,
			  		     the client can decide to fetch all interesting 
			  		     iu, the iu around current position or the iu at
			  		     destionation.
			  		     As a result, the user will get a list of available
			  		     updates roughly ordered by distance to CCP/destination and 
			  		     depending on project settings. The list is valid for the
			  		     current lifecycle and update-process only. That meas if
			  		     an update was applied the client must request the list again.
			  		     
			  		     In case that no online connection is available, the
			  		     request returns with error code. Furthermore an error
			  		     will responded in case that the auto mode is enabled. 
			  		     Please note: an empty list is not an error - it simply
			  		     tells the client that there are no updates available</Description>
			<Response>updateList</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>updateList_R_mode</Name>
			    		            <Description></Description>
			    		          <ID>24</ID>
			    		<Type>org_harman_nav_ctrl_dbupdate_DBUpdateTypes::E_RequestMode</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>updateList</Name>
			<ID>2200</ID>
			         <Type>Response</Type>
			  		   <Description>manual request for search for available updates  
			  		     This method is used in case of auto-mode off. A
			  		     client can use this method to a list of available
			  		     updates for his HU. By specifying the E_RequestMode,
			  		     the client can decide to fetch all interesting 
			  		     iu, the iu around current position or the iu at
			  		     destionation.
			  		     As a result, the user will get a list of available
			  		     updates roughly ordered by distance to CCP/destination and 
			  		     depending on project settings. The list is valid for the
			  		     current lifecycle and update-process only. That meas if
			  		     an update was applied the client must request the list again.
			  		     
			  		     In case that no online connection is available, the
			  		     request returns with error code. Furthermore an error
			  		     will responded in case that the auto mode is enabled. 
			  		     Please note: an empty list is not an error - it simply
			  		     tells the client that there are no updates available</Description>
			  		   <Parameters>
			        <Parameter>
			            <Name>updateList_list</Name>
			            <Description></Description>
			          <ID>26</ID>
			<Type>org_harman_nav_ctrl_dbupdate_DBUpdateTypes::TOTAUpdateList</Type>
			           <IsDefault>false</IsDefault>
			        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>applyUpdate</Name>
			   <ID>1201</ID>
			         <Type>Request</Type>
			  		   <Description>manual request to download and apply an incremental update patch
			  		     This method is used in case of auto-mode = off and the client is responsible
			  		     to control the complete incremental update process himself.
			  		     Preceding to this call, the client must have already called updateList 
			  		     to get a list of available updates. By passing the TId of one of the patches
			  		     in the list, the download and appliance of a patch is started.
			  		     There are different error scenarios (see error codes)</Description>
			<Response>applyUpdate</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>applyUpdate_R_patchId</Name>
			    		            <Description>identifier of a certain patch</Description>
			    		          <ID>28</ID>
			    		<Type>org_harman_nav_ctrl_dbupdate_DBUpdateTypes::TId</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>applyUpdate</Name>
			<ID>2201</ID>
			         <Type>Response</Type>
			  		   <Description>manual request to download and apply an incremental update patch
			  		     This method is used in case of auto-mode = off and the client is responsible
			  		     to control the complete incremental update process himself.
			  		     Preceding to this call, the client must have already called updateList 
			  		     to get a list of available updates. By passing the TId of one of the patches
			  		     in the list, the download and appliance of a patch is started.
			  		     There are different error scenarios (see error codes)</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>cancelUpdate</Name>
			   <ID>1202</ID>
			         <Type>Request</Type>
			  		   <Description>Request to stop current applying process
			  		     This method allows the client to stop an update progress. In essence
			  		     this might lead to a stop-download or stop db-patch. 
			  		     A cancelled update will be cleaned up if the pausedProcess is set to false.
			  		     Otherwise the client can resume the update later on.
			  		     Please note: this call is only available in manual mode
			  		     The controller stores the status of the current update and allows 
			  		     to resume the update process. The client can recall see requestApplyUpdate
			  		     which internaly will resume the update (if TId is the same).
			  		     Multiple calls of requestCancelUpdate can be used to first pause an update
			  		     and later on clean up.
			  		     The controller will autocleanup update content automatically if the
			  		     data is deprecated.</Description>
			<Response>cancelUpdate</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>cancelUpdate_R_pauseProcess</Name>
			    		            <Description></Description>
			    		          <ID>31</ID>
			    		<Type>bool</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>cancelUpdate</Name>
			<ID>2202</ID>
			         <Type>Response</Type>
			  		   <Description>Request to stop current applying process
			  		     This method allows the client to stop an update progress. In essence
			  		     this might lead to a stop-download or stop db-patch. 
			  		     A cancelled update will be cleaned up if the pausedProcess is set to false.
			  		     Otherwise the client can resume the update later on.
			  		     Please note: this call is only available in manual mode
			  		     The controller stores the status of the current update and allows 
			  		     to resume the update process. The client can recall see requestApplyUpdate
			  		     which internaly will resume the update (if TId is the same).
			  		     Multiple calls of requestCancelUpdate can be used to first pause an update
			  		     and later on clean up.
			  		     The controller will autocleanup update content automatically if the
			  		     data is deprecated.</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>finalizeUpdate</Name>
			   <ID>1203</ID>
			         <Type>Request</Type>
			  		   <Description>initialize a HU restart which finalizes the DB-update process
			  		     
			  		     This method allows the client to control the time in which the system
			  		     gets restarted in order to finalize the DB-update process. Please note:
			  		     for each updates (incremental/partial/full) a system restart is necessary
			  		     to switch to the new DB-files. Intention of this method is to give the control
			  		     about the restart-time to the client to avoid a restart during 
			  		     a critical guidance situation.
			  		     Please note: in some cases a restart is not possible, in this case
			  		     the E_INVALID_SYSTEM_STATE will be returned</Description>
			<Response>finalizeUpdate</Response>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>finalizeUpdate</Name>
			<ID>2203</ID>
			         <Type>Response</Type>
			  		   <Description>initialize a HU restart which finalizes the DB-update process
			  		     
			  		     This method allows the client to control the time in which the system
			  		     gets restarted in order to finalize the DB-update process. Please note:
			  		     for each updates (incremental/partial/full) a system restart is necessary
			  		     to switch to the new DB-files. Intention of this method is to give the control
			  		     about the restart-time to the client to avoid a restart during 
			  		     a critical guidance situation.
			  		     Please note: in some cases a restart is not possible, in this case
			  		     the E_INVALID_SYSTEM_STATE will be returned</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
               <Method>
                  <Name>dealerUpdateAvailable</Name>
                  <Description>notify the client about a dealer update media than can be applied
                    This broadcast is emitted by IUcontroller if an update 
                    media is connected to the HU which contains a valid 
                    update for the system. The client then can decide to
                    apply the update by see applyUpdate. Please note:
                    in contrast to incremental updates, this requestApplyUpdate will
                    then switch the system to Full-Update-Mode in which no iu
                    request is possible.</Description>
         <ID>2300</ID>
                  <Type>Information</Type>
                  <Description>notify the client about a dealer update media than can be applied
                    This broadcast is emitted by IUcontroller if an update 
                    media is connected to the HU which contains a valid 
                    update for the system. The client then can decide to
                    apply the update by see applyUpdate. Please note:
                    in contrast to incremental updates, this requestApplyUpdate will
                    then switch the system to Full-Update-Mode in which no iu
                    request is possible.</Description>
                  <Parameters>
                          <Parameter>
                              <Name>dealerUpdateAvailable_dealerUpdate</Name>
                              <Description></Description>
                            <ID>36</ID>
                  <Type>org_harman_nav_ctrl_dbupdate_DBUpdateTypes::SDBDealerUpdate</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                  </Parameters>
               </Method>
</Methods>


</DSI>

