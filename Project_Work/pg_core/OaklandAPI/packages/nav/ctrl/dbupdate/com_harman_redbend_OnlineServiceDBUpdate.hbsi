<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<DSI>
<Name>com_harman_redbend_OnlineServiceDBUpdate</Name>
   <ID>2</ID>
   <Extern>true</Extern>
	<Version>
      <Major>1</Major>
      <Minor>0</Minor>
   </Version>
   <Includes>
   
   <Include>
         <Name>api/nav/ctrl/pf/dbupdate/com_harman_redbend_OnlineServiceDBUpdateTypes.hbtd</Name>
         
         <Major>1</Major>
         <Minor>0</Minor>
   </Include>
   </Includes>
   
	  <Enums>
        <Enum>
         <Name>Error</Name>
          <ID>2</ID>
         <Description>This is the type for error responses.</Description>
         <EnumIDs>
	         <EnumID>
	            <Name>ERROR_createSession_E_ServiceUnavailable</Name>
	            <ID>3</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_getUpdatePatchList_E_ServiceUnavailable</Name>
	            <ID>4</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_getUpdatePatchList_E_InvalidSession</Name>
	            <ID>5</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_startDownload_E_ServiceUnavailable</Name>
	            <ID>6</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_startDownload_E_InvalidSession</Name>
	            <ID>7</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_startDownload_E_InvalidPatch</Name>
	            <ID>8</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_cancelDownload_E_ServiceUnavailable</Name>
	            <ID>9</ID>
	         </EnumID>
	         <EnumID>
	            <Name>ERROR_cancelDownload_E_InvalidSession</Name>
	            <ID>10</ID>
	         </EnumID>
	    </EnumIDs>

    </Enum>
</Enums>

   <DataTypes>
   </DataTypes>
	<Methods>
			<Method>
			
			   <Name>createSession</Name>
			   <ID>1200</ID>
			         <Type>Request</Type>
			  		   <Description>create a session to onlineservice for dbupdate patch download
			  		   	
			  		   	at the start of each db-update online request a session to the online client 
			  		   	must be established. A client will use this method to tell the online service
			  		   	the details of his configuration - this is done by the parameter clientInfo. 
			  		   	Furthermore the client will inform the online service about the results of 
			  		   	previous update procedures.
			  		   	As a result the online service will answer with a unique session id with must
			  		   	be used in all subsequent requests. In error cases, e.g. if the online connection
			  		   	is not available or if the product db is not supported, the online service
			  		   	will answer with an error. 
			  		   	
			  		   	A session is valid for a complete lifecycle and can be will be dissolved by deleteSession. 
			  		   	Please note: for online service, there is no way to discard a session. 
			  		   	
			  		   	Please note: as soon as an update was applied successfully, the given 
			  		   	session might be invalid because the DB-configuration has changed. In this
			  		   	situation a client must delete the given session and create a new one.
			  		   	
			  		   	TBC.: at which granularity do we want to report errors?</Description>
			<Response>createSession</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>createSession_R_clientInfo</Name>
			    		            <Description>information about the client (db, updatelib version)</Description>
			    		          <ID>12</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::SClientInfo</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			    		        <Parameter>
			    		            <Name>createSession_R_clientStatus</Name>
			    		            <Description>status of client - e.g. previous patch result</Description>
			    		          <ID>13</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::SClientStatus</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>createSession</Name>
			<ID>2200</ID>
			         <Type>Response</Type>
			  		   <Description>create a session to onlineservice for dbupdate patch download
			  		   	
			  		   	at the start of each db-update online request a session to the online client 
			  		   	must be established. A client will use this method to tell the online service
			  		   	the details of his configuration - this is done by the parameter clientInfo. 
			  		   	Furthermore the client will inform the online service about the results of 
			  		   	previous update procedures.
			  		   	As a result the online service will answer with a unique session id with must
			  		   	be used in all subsequent requests. In error cases, e.g. if the online connection
			  		   	is not available or if the product db is not supported, the online service
			  		   	will answer with an error. 
			  		   	
			  		   	A session is valid for a complete lifecycle and can be will be dissolved by deleteSession. 
			  		   	Please note: for online service, there is no way to discard a session. 
			  		   	
			  		   	Please note: as soon as an update was applied successfully, the given 
			  		   	session might be invalid because the DB-configuration has changed. In this
			  		   	situation a client must delete the given session and create a new one.
			  		   	
			  		   	TBC.: at which granularity do we want to report errors?</Description>
			  		   <Parameters>
			        <Parameter>
			            <Name>createSession_sessionHandle</Name>
			            <Description>session handle for the client</Description>
			          <ID>15</ID>
			<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
			           <IsDefault>false</IsDefault>
			        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>deleteSession</Name>
			   <ID>1201</ID>
			         <Type>Request</Type>
			  		   <Description>release and delete an existing session
			  		   	
			  		   	A session created by createDBUpdateOnlineSession will exist the complete lifecycle and
			  		   	can only be removed by deleteDBUpdateOnlineSession from client side. This means
			  		   	that the client is responsible to maintain a session and assure that the session
			  		   	gets deleted as soon as it is not any longer necessary.</Description>
			<Response>deleteSession</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>deleteSession_R_sessionHandle</Name>
			    		            <Description>session handle for the client</Description>
			    		          <ID>17</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>deleteSession</Name>
			<ID>2201</ID>
			         <Type>Response</Type>
			  		   <Description>release and delete an existing session
			  		   	
			  		   	A session created by createDBUpdateOnlineSession will exist the complete lifecycle and
			  		   	can only be removed by deleteDBUpdateOnlineSession from client side. This means
			  		   	that the client is responsible to maintain a session and assure that the session
			  		   	gets deleted as soon as it is not any longer necessary.</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>getUpdatePatchList</Name>
			   <ID>1202</ID>
			         <Type>Request</Type>
			  		   <Description>get a complete list of available updates for the given session
			  		   	
			  		   	With configuration given via createSession the online service can identify all
			  		   	appropriate updates for the registered client. By calling this method, the client
			  		   	can fetch a textual representation of the available patched at once (we expect a
			  		   	small list of updates ~10-20 entries only). The data provided via 
			  		   	online service is a list of SUpdatePatchInfo. This struct contains an identifier,
			  		   	a textual representation and a generic metaInfo structure. While the identifier
			  		   	is used to reference the entry in the list, the textual representation is used
			  		   	to describe the patch in a human understandable way (e.g. to display as a 
			  		   	text in the HMI). Please note that the client does not need to interpret any
			  		   	version or product information. Therefore the online service must provide
			  		   	a sorted list. This sorting order should be used in case in which the update
			  		   	is realize fully automatically. Due to the fact that the client does not need
			  		   	any knowledge about the patch content, it will select the patches in order of list.
			  		   	
			  		   	Please note: if there is no patch available for the client, the online service
			  		   	must answer with an empty list instead of an error. The error condition must be
			  		   	set only in real error conditions (e.g. online connection lost)
			  		   	  
			  		   	For further details about the struct, please rfer to the OnlineServiceDBUpdateTypes.fidl file.</Description>
			<Response>getUpdatePatchList</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>getUpdatePatchList_R_sessionHandle</Name>
			    		            <Description>session handle for the client</Description>
			    		          <ID>20</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>getUpdatePatchList</Name>
			<ID>2202</ID>
			         <Type>Response</Type>
			  		   <Description>get a complete list of available updates for the given session
			  		   	
			  		   	With configuration given via createSession the online service can identify all
			  		   	appropriate updates for the registered client. By calling this method, the client
			  		   	can fetch a textual representation of the available patched at once (we expect a
			  		   	small list of updates ~10-20 entries only). The data provided via 
			  		   	online service is a list of SUpdatePatchInfo. This struct contains an identifier,
			  		   	a textual representation and a generic metaInfo structure. While the identifier
			  		   	is used to reference the entry in the list, the textual representation is used
			  		   	to describe the patch in a human understandable way (e.g. to display as a 
			  		   	text in the HMI). Please note that the client does not need to interpret any
			  		   	version or product information. Therefore the online service must provide
			  		   	a sorted list. This sorting order should be used in case in which the update
			  		   	is realize fully automatically. Due to the fact that the client does not need
			  		   	any knowledge about the patch content, it will select the patches in order of list.
			  		   	
			  		   	Please note: if there is no patch available for the client, the online service
			  		   	must answer with an empty list instead of an error. The error condition must be
			  		   	set only in real error conditions (e.g. online connection lost)
			  		   	  
			  		   	For further details about the struct, please rfer to the OnlineServiceDBUpdateTypes.fidl file.</Description>
			  		   <Parameters>
			        <Parameter>
			            <Name>getUpdatePatchList_availablePatchesOrdered</Name>
			            <Description>ordered list of update descriptions</Description>
			          <ID>22</ID>
			<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::TUpdatePatchInfoList</Type>
			           <IsDefault>false</IsDefault>
			        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>startDownload</Name>
			   <ID>1203</ID>
			         <Type>Request</Type>
			  		   <Description>initiate a download of a certain patch
			  		   	
			  		   	A client must get a list of available patches (see getUpdatePatchList) in order to 
			  		   	call this method. A patch is identified by TPatchId which is unique for a patch
			  		   	and a given session. By calling this method, a download is initiated. In error case,
			  		   	e.g. patch not available, ... an appropriate error code is returned.
			  		   	
			  		   	In successful case the downloadUpdatePatch will start a download. The progress of
			  		   	the download will then be indicated by downloadProgress and the completion of
			  		   	the download by downloadComplete. If an error occurs during download, the 
			  		   	downloadFailed broadcast will be send out. Furthermore the client can cancel a started
			  		   	download by cancelDownload</Description>
			<Response>startDownload</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>startDownload_R_sessionHandle</Name>
			    		            <Description>session handle for the client</Description>
			    		          <ID>24</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			    		        <Parameter>
			    		            <Name>startDownload_R_patchId</Name>
			    		            <Description>identification of a certain patch</Description>
			    		          <ID>25</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::TPatchId</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>startDownload</Name>
			<ID>2203</ID>
			         <Type>Response</Type>
			  		   <Description>initiate a download of a certain patch
			  		   	
			  		   	A client must get a list of available patches (see getUpdatePatchList) in order to 
			  		   	call this method. A patch is identified by TPatchId which is unique for a patch
			  		   	and a given session. By calling this method, a download is initiated. In error case,
			  		   	e.g. patch not available, ... an appropriate error code is returned.
			  		   	
			  		   	In successful case the downloadUpdatePatch will start a download. The progress of
			  		   	the download will then be indicated by downloadProgress and the completion of
			  		   	the download by downloadComplete. If an error occurs during download, the 
			  		   	downloadFailed broadcast will be send out. Furthermore the client can cancel a started
			  		   	download by cancelDownload</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
			<Method>
			
			   <Name>cancelDownload</Name>
			   <ID>1204</ID>
			         <Type>Request</Type>
			  		   <Description>client can cancel a certain download
			  		   	
			  		   	All initiated downloads can be cancelled at any time by the client. As a result
			  		   	of this method the broadcast downloadFailed will be send out.</Description>
			<Response>cancelDownload</Response>
			  		   <Parameters>
			    		        <Parameter>
			    		            <Name>cancelDownload_R_sessionHandle</Name>
			    		            <Description>session handle for the client</Description>
			    		          <ID>28</ID>
			    		<Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
			    		           <IsDefault>false</IsDefault>
			    		        </Parameter>
			  		   </Parameters>
			</Method>
			<Method>
				<Name>cancelDownload</Name>
			<ID>2204</ID>
			         <Type>Response</Type>
			  		   <Description>client can cancel a certain download
			  		   	
			  		   	All initiated downloads can be cancelled at any time by the client. As a result
			  		   	of this method the broadcast downloadFailed will be send out.</Description>
			  		   <Parameters>
			  		   </Parameters>
			</Method>
               <Method>
                  <Name>updatesAvailable</Name>
                  <Description>a broadcast which allows the online service to notify
                  	a client about changes in the patch-repository on server. This trigger can be
                  	used by registered clients to get the latest list of available patches by 
                  	calling getUpdatePatchList. Please note: the broadcast does not tell which
                  	kind of update (add/update/delete of an (existing) patch) nor does the 
                  	broadcast identify a certain patch.</Description>
         <ID>2300</ID>
                  <Type>Information</Type>
                  <Description>a broadcast which allows the online service to notify
                  	a client about changes in the patch-repository on server. This trigger can be
                  	used by registered clients to get the latest list of available patches by 
                  	calling getUpdatePatchList. Please note: the broadcast does not tell which
                  	kind of update (add/update/delete of an (existing) patch) nor does the 
                  	broadcast identify a certain patch.</Description>
                  <Parameters>
                          <Parameter>
                              <Name>updatesAvailable_sessionHandle</Name>
                              <Description>session handle for the client</Description>
                            <ID>31</ID>
                  <Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                  </Parameters>
               </Method>
               <Method>
                  <Name>downloadProgress</Name>
                  <Description>notify a client about the download progress in percent
                  	
                  	A client might be interested in the progress of a download in order to
                  	indicate this information to another client (e.g. HMI) or in order to
                  	decide about further steps (e.g. delay a shutdown). This broadcast is
                  	emitted in cycle manner (e.g. every progress change). The parameter 
                  	progress_percent describes in percentage (range allowed from 0 to 100). 
                  	As soon as the download is complete (reaching progress_percent=100) 
                  	the online service must indicate this by braodcasting downloadComplete.</Description>
         <ID>2301</ID>
                  <Type>Information</Type>
                  <Description>notify a client about the download progress in percent
                  	
                  	A client might be interested in the progress of a download in order to
                  	indicate this information to another client (e.g. HMI) or in order to
                  	decide about further steps (e.g. delay a shutdown). This broadcast is
                  	emitted in cycle manner (e.g. every progress change). The parameter 
                  	progress_percent describes in percentage (range allowed from 0 to 100). 
                  	As soon as the download is complete (reaching progress_percent=100) 
                  	the online service must indicate this by braodcasting downloadComplete.</Description>
                  <Parameters>
                          <Parameter>
                              <Name>downloadProgress_sessionHandle</Name>
                              <Description>session handle for the client</Description>
                            <ID>33</ID>
                  <Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                          <Parameter>
                              <Name>downloadProgress_progress_percent</Name>
                              <Description>progress of the download, allowed range 0..100</Description>
                            <ID>34</ID>
                  <Type>UInt8</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                  </Parameters>
               </Method>
               <Method>
                  <Name>downloadComplete</Name>
                  <Description>indicate the completion of a download 
                  	 
                  	this broadcast is used to indicate the completion of a download-
                  	process. - the successful as well as the failure case.
                  	The pathToPatch points to the patch-file somewhere on HDD. 
                  	Please note: the ownership and responsibility of maintaining the
                  	file is now transfered from online service to the client which means  
                  	that as soon as the patch is not anylonger used, the client must
                  	remove the file from HDD.</Description>
         <ID>2302</ID>
                  <Type>Information</Type>
                  <Description>indicate the completion of a download 
                  	 
                  	this broadcast is used to indicate the completion of a download-
                  	process. - the successful as well as the failure case.
                  	The pathToPatch points to the patch-file somewhere on HDD. 
                  	Please note: the ownership and responsibility of maintaining the
                  	file is now transfered from online service to the client which means  
                  	that as soon as the patch is not anylonger used, the client must
                  	remove the file from HDD.</Description>
                  <Parameters>
                          <Parameter>
                              <Name>downloadComplete_sessionHandle</Name>
                              <Description>session handle for the client</Description>
                            <ID>36</ID>
                  <Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                          <Parameter>
                              <Name>downloadComplete_pathToPatch</Name>
                              <Description>path to the patchfile (ownership translated to client)</Description>
                            <ID>37</ID>
                  <Type>CHBString</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                  </Parameters>
               </Method>
               <Method>
                  <Name>downloadFailed</Name>
                  <Description>indicate the abort of  a download 
                  	 
                  	this broadcast is used to indicate that a download was stopped because
                  	of an external error condition or because of an explicit cancelDownload
                  	request from client.</Description>
         <ID>2303</ID>
                  <Type>Information</Type>
                  <Description>indicate the abort of  a download 
                  	 
                  	this broadcast is used to indicate that a download was stopped because
                  	of an external error condition or because of an explicit cancelDownload
                  	request from client.</Description>
                  <Parameters>
                          <Parameter>
                              <Name>downloadFailed_sessionHandle</Name>
                              <Description>session handle for the client</Description>
                            <ID>39</ID>
                  <Type>com_harman_redbend_OnlineServiceDBUpdateTypes::Handle</Type>
                             <IsDefault>false</IsDefault>
                          </Parameter>
                  </Parameters>
               </Method>
</Methods>


</DSI>

