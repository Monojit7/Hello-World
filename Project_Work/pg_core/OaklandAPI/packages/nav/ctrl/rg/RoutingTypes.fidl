package org.harman.nav.ctrl

import org.harman.nav.ctrl.CommonTypes.* from "../common/CommonTypes.fidl"

typeCollection RoutingTypes {
	
	enumeration CostModel extends BasicEnum {
		FASTEST			= "0x0160"	
		SHORTEST		= "0x0161"
		ECOLOGICAL		= "0x0162"
		SCENIC			= "0x0163"
		EASY			= "0x0164"
		OFF_ROAD		= "0x0165"
		BALANCED		= "0x0166"
		CHEAPEST		= "0x0167"
	}
 
 	enumeration PreferenceMode extends BasicEnum { 
 		PROHIBIT		= "0x0190"
 		AVOID			= "0x0191"
 		USE				= "0x0192"
 		PREFER			= "0x0193"	
 		IGNORE			= "0x0194"	
 	}
 	 	
	enumeration RoutePreferenceSource extends BasicEnum { 
		FERRY				= "0x0170"
		TOLL_ROADS			= "0x0171"
		TUNNELS				= "0x0172"
		HIGHWAYS_MOTORWAYS	= "0x0173"
		VEHICLE_SIZE_LIMIT	= "0x0174"
		CRIME_AREAS			= "0x0175"	
		U_TURNS             = "0x0176"
		UNPAVED             = "0x0177"
		HOV                 = "0x0178"
	} 	 	
  
  	enumeration ConditionPreferenceSource extends BasicEnum {
  		TRAFFIC_REALTIME	= "0x0200"
  	}
 	 	
	enumeration Schedule extends BasicEnum { 
		ARRIVAL_TIME  		= "0x018a"
 		ARRIVAL_DATE		= "0x018b"
		DEPARTURE_TIME		= "0x018c"
		DEPARTURE_DATE		= "0x018d" 
	}
	
	enumeration CalculationError extends BasicEnum {
		UNREACHABLE_DESTINATION		= "0x0133"
		UNFULFILLED_PREFERENCE_MODE	= "0x0134"
	}
	
   enumeration RouteSettingType extends BasicEnum {
      COST_MODEL           = "0x00C0"
      USE_TRAFFIC_PATTERNS = "0x00C1"
      SHOW_ALTERNATIVES    = "0x00C2"
      ROUTE_PREFERENCES    = "0x00C3"
   }

	<**
		@description : struct generated for DBus argument SetRoutePreferences_roadPreferenceList
	**>
	struct RoutePreference {
		PreferenceMode mode
		RoutePreferenceSource source
	}

	<**
		@description : struct generated for DBus argument SetRoutePreferences_conditionPreferenceList
	**>
	struct ConiditionPreference {
		PreferenceMode mode
		ConditionPreferenceSource source
	}

   array RoutePreferences of RoutePreference
   
   union RouteSettingItem {
      CostModel costModelValue
      Boolean boolValue
      RoutePreferences routePreferencesValue
   }
   
	map RouteSchedule {
		Schedule to UInt32
	}

	enumeration WapointElementType extends BasicEnum {
		WAYPOINT_TYPE		= "0x0121"
		LOCATION_INPUT		= "0x00b1"
		LATITUDE			= "0x00a0"
		LONGITUDE			= "0x00a1"
		ALTITUDE			= "0x00a2"		
	}

	enumeration IntermediatePointType {
		HARD_POINT
		SOFT_POINT
	}
	
	enumeration RouteOverviewType extends Schedule  {
		TOTAL_DISTANCE			= "0x018f"
		TOTAL_TIME				= "0x018e"
		FUEL_CONSUMPTION		= "0x019e"
	}
	
	union RouteOverviewItem {
		UInt32 uValue
	}
	
	struct IntermediatePoint extends Coordinate2D {
		IntermediatePointType type
	}
	
	union WayPointItem {
		Double coordinateValue
		Int32 altitudeValue
		IntermediatePointType wayPointValue
		ByteBuffer metaData
	}
	
	map WayPoint {
		WapointElementType to WayPointItem
	}

	map RouteOverview {
		RouteOverviewType to RouteOverviewItem
	}

    map RouteSettings {
       RouteSettingType to RouteSettingItem
    }
}