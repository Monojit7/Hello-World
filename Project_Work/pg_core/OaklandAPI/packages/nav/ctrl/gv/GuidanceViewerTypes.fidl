package org.harman.nav.ctrl

import org.harman.nav.ctrl.CommonTypes.* from "../common/CommonTypes.fidl"

typeCollection GuidanceViewerTypes {
   version {
      major 1
      minor 0
   }

    <**
		@description : Descripts type of recomend lane
	**>
	enumeration ERecomendLane {

		NOT_RECOMMENDED = "0"
		
        RECOMMENDED = "1"
	}
	
	<**
		@description : Descripts type of increased lane
	**>
	enumeration EIncreasedLane {

		NOT_INCREASED = "0"
		
        INCREASED = "1"
	}
	
	<**
		@description : Descripts type of increased lane side
	**>
	enumeration EIncreasedLaneSide {

		INCREASED_LANE_LEFT = "0"
		
        INCREASED_LANE_RIGHT = "1"
	}
	
	<**
		@description : Descripts type of lane option
	**>
	enumeration EIncreasedLaneOption {

		INCREASED_LANE_OPTION = "0"
		
        DECREASED_LANE_OPTION = "1"
	}
		
	<**
		@description : Character Code Of Street Name
	**>
	enumeration ECharacterCodeOfStreetName {

         UTF8 = "0"
		 
         UCS2 = "1"
		 
         ASCII = "2"
		 
         SJIS = "3"
	}
	
	<**
		@description : Special Road Shape For TbT
	**>
	enumeration ESpecialRoadShapeForTbT {

         NONDISPLAY = "0"
		 
         GOALONGTHEROADRIGHT = "1"
		 
         GOALONGTHEROADLEFT = "2"
		 
         UTURNRIGHT = "3"
		 
         UTURNLEFT = "4"
		 
         UTURNLEFTROTARYTRAFFICCIRCLEUTURNRIGHT = "5"
		 
         ROTARYTRAFFICCIRCLEUTURNLEFT = "6"
		 
         MICHIGANTURNRIGHT = "7"
		 
         MICHIGANTURNLEFT = "8"
		 
         DESTINATIONROUND = "9"
		 
         TRANSITPOINTROUND = "10"
		 
         DESTINATIONFLAG = "11"
		 
         TRANSITPOINTFLAG = "12"
		 
         ROTARYTRAFFICCIRCLEHEADINGFORINWARDRIGHT = "13"
		 
         ROTARYTRAFFICCIRCLEHEADINGFORINWARDLEFT = "14"
		 
         HOOKTURN = "15"
	}
	
	<**
		@description : Presence Of Rotary
	**>
	enumeration EPresenceOfRotary {

         ABSENCE = "0"
		 
         PRESENCE = "1"
	}
	
	<**
		@description : Orientation of maneuver
	**>
	enumeration EManeuverOrientation {

         OUTWARD = "0"
         INWARD = "1"
	}
	
	<**
		@description : Presence Of Rotary
	**>
	enumeration EDistanceUnit {

         METER = "0"
		 
         KM = "2"
		 
         FEET = "4"
		 
         YARD = "5"
		 
         MILE = "6"
	}

	<**
		@description : Descripts lane flags
	**>
	struct TLaneFlags {

		<**
			@description : Recomend Lane
		**>
		ERecomendLane recomended

		<**
			@description : Increased lane.
		**>
		EIncreasedLane increasedLane
		
		<**
			@description : Increased lane side
		**>		
		EIncreasedLaneSide increasedLaneSide
		
		<**
			@description : Increased lane option
		**>		
		EIncreasedLaneOption increasedLaneOption
	}
	
	array TLanesFlagList of TLaneFlags
	array TLanesDirectionList of UInt16
	
	<**
		@description : Descripts maneuver status
	**>
	struct TManeuverStatus {

      UInt8 uiVehicleDirection
	  
      ESpecialRoadShapeForTbT eSpecialRoadShapeForTbT
	  
      EPresenceOfRotary ePresenceOfRotary
	  
      EManeuverOrientation eOutward
	  
      UInt8 uiDistanceToIntersection
	  
      EDistanceUnit eDistanceUnit
	  
      UInt8 uiDirectionOfMovement
	  
      UInt32 uiRoadShapeInformation
	  
      ESpecialRoadShapeForTbT eSpecialRoadShapeForArrowGuide
	  
      EPresenceOfRotary ePresenceOfRotaryArrow
	  
      EManeuverOrientation eOutwardArrow
	  
      UInt16 uiDistanceToIntersectionArrow
	  
      EDistanceUnit eDistanceUnitToIntersectionArrow
	  
      UInt8 uiDirectionOfMovementArrow
	  
      UInt8 uiTotalLaneNumber
	  
      TLanesFlagList vLanesFlags
	  
      TLanesDirectionList vLanesDirection
	  
      ESpecialRoadShapeForTbT eSpecialRoadShapeOfNextIntersecion
	  
      EPresenceOfRotary ePresenceOfRotaryNextIntersectionInformation
	  
      EManeuverOrientation eOutwardNextIntersectionInformation
	  
      UInt8 uiDistanceToIntersectionNextIntersectionInformation
	  
      EDistanceUnit eDistanceUnitNextIntersectionInformation
	  
      UInt8 eDirectionOfNextMovementNextIntersectionInformation
	  
      UInt32 uiRoadShapeInformationNextIntersectionInformation
	  
      UInt8 uiAzimuthInfromationToDestination
	  
      ECharacterCodeOfStreetName eCharacterCodeOfCurrentStreetName
	  
      ByteBuffer chbCurrentStreetName
	  
      ECharacterCodeOfStreetName eCharacterCodeofNextStreetName
	  
      ByteBuffer chbNextStreetName
	}
}