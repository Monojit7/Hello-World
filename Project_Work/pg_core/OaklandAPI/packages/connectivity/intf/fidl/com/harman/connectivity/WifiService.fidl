package com.harman.connectivity

import com.harman.connectivity.WifiTypedefs.* from "WifiServiceTypes.fidl"

// Methods for Client

interface WifiService {
	version {major 1 minor 0}
	
method enableClient {
	in{
		String interfaceName
	}
	out{
		String interfaceName_out
		String Result
		Int32 Code
	}
}

method disableClient {
	in{
		String interfaceName
	}
	out{
		String interfaceName_out
		String Result
		Int32 Code
	}
}
	
method scanNetworks {
	in{
		Int32 scanTime
	}
	out{
		String Result
		Int32 Code		
	}
}

method stopScanNetwork {
	in{
		String interfaceName
	}
	out{
		String Result
		Int32 Code		
	}
}

method joinNetwork {
	in{
		String ssid
		String password
		String hexKey
		stringList security
		stringList groupCipher
		stringList pairwiseCipher
		stringList authentication
		Int32 securityOption
		Boolean hidden
		String ipAddress
		String subnetMask
		Boolean saveNetwork
		Boolean highestPriority		
	}
	out{
		String Result
		Int32 Code	
		String Status	
	} 
}

method leaveNetwork {
	out{
		String Result
		Int32 Code
	}
}

method getKnownNetworkList {
	out{
		WiFiSvcNetworklist list
		String Result
		Int32 Code
	}
}

method getKnownNetworksCount {
	out{
		Int32 count
		String Result
		Int32 Code
	}
}

method storeAsKnownNetwork {
	in{
		String ssid
		String password
		String hexKey
		stringList security
		stringList groupCipher
		stringList pairwiseCipher
		stringList authentication
		Int32 securityOption
		Boolean hidden
		Boolean highestPriority		
	}
	out{
		String Result
		Int32 Code
	}	
}
	
method updateKnownNetworkPriority {
	in{
		knownNetworkList list
	}
	out{
		String Result
		Int32 Code
	}
}
	
method deleteKnownNetwork {
	in{
		String ssid
		String bssid
	}
	out{
		String Result
		Int32 Code	
	}
}

method startPeriodicScanning {
	in{
		Int32 interval
		Int32 scantime
		Boolean autoconnect
		stringList doNotAutoconnect		
	}
	out{
		String Result
		Int32 Code
	}	
}

method stopPeriodicScanning {
	out{
		String Result
		Int32 Code
	}
}

method getClientStatus {
	out{
		Int32 assocState
		String bssid
		String securityState
		Int32 rssi
		String Result
		Int32 Code
	}
}

method getClientAddress {
	out{
		String interfaceName
		String ipAddress
		String subnet
		String Result
		Int32 Code
	}
}


// Methods for Access Point

method enableAP {
	in{
		String interfaceName
		Int32 Keyindex
		stringList Keylist
		String password
		String Encryption
		String Authentication 
		Int32 Channel
		String opMode
		String CountryCode
		String ssid
		stringList eWPSModeList
		Boolean broadcast_On
		String filter_Mode
		stringList mac_list
	}
	out{
		String Result
		Int32 Code	
	}
}

method disableAP {
	in{
		String interfaceName
	}
	out
	{
		String Result
		Int32 Code
	}
}

method getAccessPointProperties {
	out{	
		String interfaceName
		Int32 Keyindex
		stringList Keylist
		String Encryption
		String Authentication 
		Int32 Channel
		String opMode
		String CountryCode
		String ssid
		stringList eWPSModeList
		Boolean broadcast_On
		String filter_Mode
		stringList mac_list
		String Result
		Int32 Code    	
	}
}

method getClientList {
	out {
		String interfaceName
		clientNodeList mClientList
		String Result
		Int32 Code 		
	}
}

method setMaxClient {
	in{
		Int32 maxClient
	}
	out{
		String Result
		Int32 Code		
	}
}

method getMaxClient {
	out{
		String Result
		Int32 Code			
	}
}

method setRadioPower {
	in{
		Boolean RadioPower 
	}
	out{
		String Result
		Int32 Code	
	}
}

method setBand {
	in{
		String band		
	}
	out{
		String Result
		Int32 Code	
	}
}

method getBand {
	out{
		String Result
		Int32 Code	
	}
}

method setOperationMode11ac {
	in{
		Int32 enable
	}
	out{
		String Result
		Int32 Code	
	}	
}

method getOperationMode11ac {
	out{
		Int32 enable
		String Result
		Int32 Code	
	}
}

//General methods
method setMode {
	in{
		interfaceModeList list
	}
	out{
		interfaceModeList Interfaces_Created 
		String Result
		Int32 Code	
	}
}

method getModeList {
	out{
		interfaceModeList list
		String Result
		Int32 Code	
	}
}	

method getActiveRoles {
	out{
		stringList roles
		String Result
		Int32 Code	
	}	
}

method getInterfaceByRole {
	in{
		String role
	}
	out{
		String interfaceName
		String Result
		Int32 Code
	}
}

method getRoleByInterface {
	in{
		String interfaceName
	}
	out{
		String role
		String Result
		Int32 Code
	}
}

method getMacAddress  {
	in{
		String interfaceName
	}
	out{
		String macAddr
		String role
		String Result
		Int32 Code
	}
}

method getConnectionStatus {
	out{
		connectionStatusList list
		String Result
		Int32 Code		
	}
}

// Client Broadcasts/Events

broadcast ScanningForNetworks {
	out{
		String interfaceName
		Int32 scanTime		
	}
}

broadcast scanResults {
   out{
   		WiFiSvcNetworklist list
   }
}
  
broadcast joinedNetwork {
	out{
		String interfaceName
		String ssid
		Boolean reassociated
	}
}

broadcast leftNetwork {
	out{
		String interfaceName
		String ssid
		Int32 reason
	}
}

broadcast enableClientUpdate {
	out{
		String interfaceName
		Boolean enable
	}
}

broadcast WPASuccess {
	out{
		String interfaceName
		String ssid
	}
}

broadcast WPAFailure {
	out{
		String interfaceName
		String ssid
		Int32 reason		
	}
}

broadcast connectionError {
	out {
		String interfaceName
		String ssid
	}
}

broadcast connectionEstablished {
	out {
		String interfaceName
		String ssid
	}
}

broadcast connectionLost {
	out {
		String interfaceName
		String ssid
	}
}

broadcast passwordRequired {
	out {
		String ssid
		stringList security
	}
}

broadcast MaxNumberKnownNetworksReached {
	out {
		String ssid
		Int32 maxNumber
	}
}

// Access Point Broadcasts/Events

broadcast enableAPUpdate {
	out{
		String interfaceName
		Boolean enable
	}
}

broadcast clientJoined {
	out{
		String interfaceName
		String macAddr				
	}
} 

broadcast clientLeave {
	out{
		String interfaceName
		String macAddr	
		Int32 reason
	}
} 

broadcast clientWPASuccess {
	out{
		String interfaceName
		String macAddr	
	}
} 

broadcast MaxClientSet {
	out{
		String interfaceName
		Int32 maxClient
	}
}

broadcast BandSet {
	out{
		String interfaceName
		String band	
	}
}

// General Broadcasts/Events

broadcast modeListUpdate {
	out{
		interfaceModeList list
	}
}

broadcast IfCreated {
	out{
		String interfaceName
		String role
		String macAddr
	}
}

broadcast IfDestroyed {
	out{
		String interfaceName
		String role
		String macAddr
	}
}

broadcast roleChanged {
	out{
		stringList roles
	}
}

broadcast IfUp {
	out{
		String interfaceName
		String ipAddr
		String subnetMask
	}
}

broadcast IfDown {
	out{
		String interfaceName
		Int32 reason
	}
}

broadcast wlanCrash {
	out {
		String interfaceName
	}
}

broadcast serviceFailure {
	out {
		String reason	
	}
}
}
