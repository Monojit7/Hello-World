package com.harman.audio.audioPresCtrl

typeCollection audioPresCtrlTypes  {
	
version { major 1 minor 0 }

typedef SourceId is UInt16

map EntSourceList { eEntertainmentSrcs to eSourceAvailablity }
<**
	@description : This enum holds error states of Audio pres control module
**>
enumeration eAudioPresErrors
{
	SUCCESS = 0
	FAILURE
	INVALID_REQUEST
	SOURCE_UNAVAILABLE 
    SOURCE_ALREADY_ACTIVE
}

<**
	@description : Holds entertainment source ids
**>
enumeration eEntertainmentSrcs {		
	SRC_TUNER_FM = 35
	SRC_TUNER_AM = 36
	SRC_TUNER_DAB = 37
	SRC_TUNER_LW = 39
	SRC_TUNER_MW = 40
	SRC_TUNER_SW = 41
	SRC_TUNER_WB = 42
	SRC_TUNER_SDARS = 43
	SRC_CDA = 45
	SRC_DVDA = 48
	SRC_DVDV = 50
	SRC_USB1 = 55
	SRC_USB2 = 56		
	SRC_SD_CARD = 57
	SRC_AUDIO_AUX = 60
	SRC_BT_A2DP1 = 65			
	SRC_ENT_UNKNOWN = 89
}

<**
	@description : Holds interrupt source ids
**>
enumeration eInterruptSrcs {
	SRC_SERVICE_CALL = 1
	SRC_MICROPHONE = 88
	SRC_VOICERECORDER = 2
	SRC_TTS = 4
	SRC_NAV = 5
	SRC_ETC_WARNING = 6
	SRC_ETC_INFO = 7
	SRC_TEL_HANDSFREE = 8		
	SRC_TEL_RINGING = 9
	SRC_DIPO_PHONE = 10
	SRC_DIPO_PHONE_RINGING = 11
	SRC_DIPO_SIRI = 12
	SRC_DIPO_ALT = 13
	SRC_GAL_VOICE = 16
	SRC_GAL_NAVI = 17
	SRC_GAL_UI = 18
	SRC_GAL_VR = 19
	SRC_CARLIFE_NAVI = 22
	SRC_CARLIFE_VR = 23
	SRC_MIRRORLINK_VR = 24
	SRC_CHIME_CONFIRMATION = 27
	SRC_CHIME_INDICATION = 28
	SRC_CHIME_WARNING = 29
	SRC_CHIME_KEYPAD = 30
	SRC_BEEP = 31
	SRC_TUNER_TA = 33
	SRC_TUNER_DAB_TA = 34
	SRC_INTERRUPT_UNKNOWN = 90
}
	
<**
	@description : Entertainment source's availability status
**>
 enumeration eSourceAvailablity {
    A_UNKNOWN = 0
    A_AVAILABLE = 1
    A_UNAVAILABLE = 2        
    A_MAX
}

<**
	@description : Source group list
**>
enumeration eSourceGroup {
	<**
        @description : Include all the entertainment audio, such as USB/TUNER/BT and so on.
    **>
	ENTERTAINMENT_SOURCE
	<**
        @description : All the audio sources which has the same action with phone. Higher priority source cant be mixed with other audio.
    **>
	PHONE_SOURCE
	<**
        @description : All the audio sources which has the same action with navigation. which allows to mix with entertainment audio.
    **>
	NAVIGATION_SOURCE
	<**
        @description : this includes beep sound, alert.
    **>
	SIGNAL_SOURCE
	UNKNOWN_SOURCE
}

struct sSourceType {
    <**
        @description : This is the ID of the source, it is unique in the system. we have list all the sourceID enumeration in am_sourceID_e.
    **>
    eEntertainmentSrcs sourceID

    <**
        @description : The availability of the source.
    **>
    eSourceAvailablity availability        
}

struct sSourceGroupVolume {        
    <**
        @description : Absolute volume of requested Source group.
    **>
    UInt16         absoluteVolume
    
    <**
        @description : This is the ID of the source group, we have list all the sourcegroupID enumeration in eSourceGroupList.
    **>
	eSourceGroup      sourceID        
}

struct sSourceVolume {        
    <**
        @description : Absolute volume of requested Source.
    **>
    UInt16         absoluteVolume
    
    <**
        @description : This is the ID of the source, it is unique in the system. we have list all the sourceID enumeration in am_sourceID_e.
    **>
	SourceId      sourceID        
}

<**
    @description : represent wavePlayer sampleRate type.
**>
enumeration eSampleRateType
{
	RATE_11025 = 0x0
	RATE_22050 = 0x1
	RATE_44100 = 0x2
}

<**
    @description : defination of all Handsfree scenario.
**>
enumeration eECNRScenario
{
	<**
		@description : unknown
	**>
	SCENARIO_UNKNOWN = 0
	<**
		@description : Bluetooth HFP NB (8kHz)
	**>
	SCENARIO_HANDSFREE_BT_TEL_NB
	<**
		@description : Bluetooth HFP WB (16kHz)
	**>
	SCENARIO_HANDSFREE_BT_TEL_WB
	<**
		@description : Carplay telephone narrow band (8kHz)
	**>
	SCENARIO_HANDSFREE_CARPLAY_TEL_NB
	<**
		@description : Carplay telephone wide band (16kHz)
	**>
	SCENARIO_HANDSFREE_CARPLAY_TEL_WB
	<**
		@description : Carplay Facetime super wide band (24kHz)
	**>
	SCENARIO_HANDSFREE_CARPLAY_FT_SWB
	<**
		@description : Carplay Siri super wide band (24kHz)
	**>
	SCENARIO_VR_CARPLAY_SIRI_SWB
	<**
		@description : GAL voice recognition (16kHz)
	**>
	SCENARIO_VR_GAL
	<**
		@description : mirrorlink voice recognition (16kHz)
	**>
	SCENARIO_VR_MIRRORLINK
	<**
		@description : carlife voice recognition (16kHz)
	**>
	SCENARIO_VR_CARLIFE
	<**
		@description : scenario max
	**>
	SCENARIO_MAX
}

<**
    @description : The errors of the ecnr.
**>
enumeration eENCRError
{

    <**
        @description : no error - positive reply
    **>
    E_OK = 0

    <**
        @description : default
    **>
    E_UNKNOWN = 1

    <**
        @description : Value out of range.
    **>
    E_OUT_OF_RANGE = 2

    <**
        @description : The desired object already exists.
    **>
    E_ALREADY_EXISTS = 3

    <**
        @description : The desired action is not possible.
    **>
    E_NOT_POSSIBLE = 4

    <**
        @description : The desired object is non existent.
    **>
    E_NON_EXISTENT = 5

    <**
        @description : The asynchronous action was aborted.
    **>
    E_ABORTED = 6

    E_MAX
}
        	
}