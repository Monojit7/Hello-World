package com.harman.audio.ecnr
import com.harman.audio.ecnr.ecnrType.* from "ecnrType.fidl"

<**
    @description : This class implements all echo cacellation & noise reduction
    @author : lian zhang
**>

interface ecnr
{
	version { major 0 minor 1}
	
	<**
    	@description : This function is used to start one scenario.
    **>
	method start{
		in{
			ecnr_scenario_e scenario
		}
		out{
			ecnr_Error_e err
		}
	}
	
	<**
    	@description : This function is used to stop one scenario.
    **>
	method stop{
		in{
			ecnr_scenario_e scenario
		}
		out{
			ecnr_Error_e err
		}
	}	
	
	<**
    	@description : This function is used to mute mic.
    **>
	method setMicMute{
		in{
			ecnr_mute_e muteState
		}
		out{
			ecnr_Error_e err
		}
	}
	
	<**
    	@description : This function is used to change the microphone gain value of current scenario.
    **>
	method setMicGain{
		in{
			Float gain
		}
		out{
			ecnr_Error_e err
		}
	}

	<**
    	@description : This function is used to change the log level.
    **>
	method logLevel{
		in{
			ecnr_logLevel_e level
		}
		out{
			ecnr_Error_e err
		}
	}	
	
	<**
    	@description : This function is used to change the tuning mode.
    **>
	method tuningMode{
		in{
			ecnr_tuningMode_e mode
		}
		out{
			ecnr_Error_e err
		}
	}
    
	<**
    	@description : This function is used to get mute status of mic.
    **>
	method getMicMute{
		out{
            ecnr_mute_e muteState
			ecnr_Error_e err
		}
	}
    
	<**
    	@description : This function is used to get the microphone gain value of current scenario.
    **>
	method getMicGain{
		out{
            Float gain
			ecnr_Error_e err
		}
	}
    
    <**
    	@description : This function is used to broadcast mute status of mic.
    **>
	broadcast micMuteChanged{
		out{
            ecnr_mute_e muteState
			ecnr_Error_e err
		}
	}
    
    <**
    	@description : This function is used to broadcast the microphone gain value of current scenario.
    **>
	broadcast micGainChanged{
		out{
            Float gain
			ecnr_Error_e err
		}
	}
}