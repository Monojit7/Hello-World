#ifndef DMMTUNERANNOUNCEMENTCLIENT_H
#define DMMTUNERANNOUNCEMENTCLIENT_H
/**********************************************************************
 *  Project       Harman Car Multimedia System
 *  (c) copyright 2013
 *  Company       Harman/Becker Automotive Systems GmbH
 *                All rights reserved
 **********************************************************************/

/*
 * Generated by DSI Generator version 2.0
 * Date: 6.5.2013
 */


#include "DMMTunerAnnouncement.h"


DSI_EXTERN_C_BEGIN


/*
 * Only the DSI framework is allowed to modify the attributes.
 * For the user of the proxy the attributes are constant!
 */
#ifndef DSICONST
#ifdef __cplusplus
   #define DSICONST
#else
   #define DSICONST const
#endif
#endif


/**
 * Error indication for synchronous requst calls.
 */
typedef struct _DMMTunerAnnouncementErrorIndicator
{
   /// either request or response identifier or 0 on OS error.
   DSICONST int id;
} DMMTunerAnnouncementErrorIndicator;


/* -------------------------------------------------------------------------------
 *  synchronous method calls with corresponding response (containing data)
 * ------------------------------------------------------------------------------- */


/* -------------------------------------------------------------------------------
 *  synchronous attribute fetch
 * ------------------------------------------------------------------------------- */

/**
 * Synchronous attribute retrieval for 'filters'.
 *
 * The caller is later responsible to clean up the attribute structure by calling the
 * appropriate cleanup function FiltersFree().
 *
 * @param attribute_out The structure where the attribute is stored in. Must not be NULL.
 * @param timeoutMs the wait timeout in milliseconds until the function returns.
 * @return 0 on success, -1 on error.
 */
int DMMTunerAnnouncement_GetAttributeFilters( DSIClient* client, DMMTunerAnnouncement_Filters* attribute_out, unsigned int timeoutMs );

/**
 * Synchronous attribute retrieval for 'announcements'.
 *
 * The caller is later responsible to clean up the attribute structure by calling the
 * appropriate cleanup function AnnouncementsFree().
 *
 * @param attribute_out The structure where the attribute is stored in. Must not be NULL.
 * @param timeoutMs the wait timeout in milliseconds until the function returns.
 * @return 0 on success, -1 on error.
 */
int DMMTunerAnnouncement_GetAttributeAnnouncements( DSIClient* client, DMMTunerAnnouncement_Announcements* attribute_out, unsigned int timeoutMs );

/**
 * Synchronous attribute retrieval for 'currentStation'.
 *
 * The caller is later responsible to clean up the attribute structure by calling the
 * appropriate cleanup function StationFree().
 *
 * @param attribute_out The structure where the attribute is stored in. Must not be NULL.
 * @param timeoutMs the wait timeout in milliseconds until the function returns.
 * @return 0 on success, -1 on error.
 */
int DMMTunerAnnouncement_GetAttributeCurrentStation( DSIClient* client, DMMTunerAnnouncement_Station* attribute_out, unsigned int timeoutMs );

/**
 * Synchronous attribute retrieval for 'tunerState'.
 *
 * The caller is later responsible to clean up the attribute structure by calling the
 * appropriate cleanup function TunerStateFree().
 *
 * @param attribute_out The structure where the attribute is stored in. Must not be NULL.
 * @param timeoutMs the wait timeout in milliseconds until the function returns.
 * @return 0 on success, -1 on error.
 */
int DMMTunerAnnouncement_GetAttributeTunerState( DSIClient* client, DMMTunerAnnouncement_TunerState* attribute_out, unsigned int timeoutMs );



DSI_EXTERN_C_END


#endif // DMMTUNERANNOUNCEMENTCLIENT_H
