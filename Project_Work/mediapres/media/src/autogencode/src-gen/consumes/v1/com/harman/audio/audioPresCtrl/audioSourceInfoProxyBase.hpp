/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core .
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_audio_Source_Info_PROXY_BASE_HPP_
#define V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_audio_Source_Info_PROXY_BASE_HPP_

#include <v1/com/harman/audio/audioPresCtrl/audioSourceInfo.hpp>


#include <v3/com/harman/audio/audioPresCtrl/audioPresCtrlTypes.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <string>
#include <vector>

#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace harman {
namespace audio {
namespace audioPresCtrl {

class audioSourceInfoProxyBase
    : virtual public CommonAPI::Proxy {
public:




    /**
     * description: This method should be invoked by the MediaPres for Media devices to register   
     *     device information which could be needed by the HMIs     For ex: register
     *   information on media device when they are inserted.  	Please refer
     *   sSourceInfo.eSourceAvailablity to learn about availibility states     Please
     *   refer the sequence diagram to determine when this method should be called    
     *   NOTE: This need not be invoked on device removal
     */
    /**
     * @invariant Fire And Forget
     */
    virtual void RegisterSourceInfo(const ::v3::com::harman::audio::audioPresCtrl::audioPresCtrlTypes::sSourceInfo &_info, CommonAPI::CallStatus &_internalCallStatus) = 0;
};

} // namespace audioPresCtrl
} // namespace audio
} // namespace harman
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_HARMAN_AUDIO_AUDIOPRESCTRL_audio_Source_Info_PROXY_BASE_HPP_
