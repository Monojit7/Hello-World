/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core .
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
/**
 * description: This class implements Bluetooth debugging related operations     WARNING -
 *   proper care is to be taken  from the consumer of this interface mainly because
 *   of  security concerns attached. 	Proper handling/restrictions is to be done so
 *   that the proxy uses the interface only to debug .  	And the interface
 *   consumption should not be entertained or well controlled in SOP deliveries.
 * author: Poornima Hiremath
 */
#ifndef V1_COM_HARMAN_CONNECTIVITY_BT_SERVICE_DEBUG_ONLY_HPP_
#define V1_COM_HARMAN_CONNECTIVITY_BT_SERVICE_DEBUG_ONLY_HPP_




#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Types.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace harman {
namespace connectivity {

class BtServiceDebugOnly {
public:
    virtual ~BtServiceDebugOnly() { }

    static inline const char* getInterface();
    static inline CommonAPI::Version getInterfaceVersion();
};

const char* BtServiceDebugOnly::getInterface() {
    return ("com.harman.connectivity.BtServiceDebugOnly");
}

CommonAPI::Version BtServiceDebugOnly::getInterfaceVersion() {
    return CommonAPI::Version(1, 1);
}


} // namespace connectivity
} // namespace harman
} // namespace com
} // namespace v1

namespace CommonAPI {
}


// Compatibility
namespace v1_1 = v1;

#endif // V1_COM_HARMAN_CONNECTIVITY_BT_SERVICE_DEBUG_ONLY_HPP_
