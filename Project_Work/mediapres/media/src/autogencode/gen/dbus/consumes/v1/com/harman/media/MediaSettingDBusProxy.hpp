/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus .
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_HARMAN_MEDIA_Media_Setting_DBUS_PROXY_HPP_
#define V1_COM_HARMAN_MEDIA_Media_Setting_DBUS_PROXY_HPP_

#include <v1/com/harman/media/MediaSettingProxyBase.hpp>
#include "v1/com/harman/media/MediaSettingDBusDeployment.hpp"

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/DBus/DBusAddress.hpp>
#include <CommonAPI/DBus/DBusFactory.hpp>
#include <CommonAPI/DBus/DBusProxy.hpp>
#include <CommonAPI/DBus/DBusAddressTranslator.hpp>
#include <CommonAPI/DBus/DBusAttribute.hpp>
#include <CommonAPI/DBus/DBusEvent.hpp>

#undef COMMONAPI_INTERNAL_COMPILATION

#include <string>

namespace v1 {
namespace com {
namespace harman {
namespace media {

class MediaSettingDBusProxy
    : virtual public MediaSettingProxyBase, 
      virtual public CommonAPI::DBus::DBusProxy {
public:
    MediaSettingDBusProxy(
        const CommonAPI::DBus::DBusAddress &_address,
        const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection);

    virtual ~MediaSettingDBusProxy() { }

    virtual LocaleNameAttribute& getLocaleNameAttribute();
    virtual VideoPlaybackSpeedAttribute& getVideoPlaybackSpeedAttribute();

    virtual PlaybackSpeedChangeEvent& getPlaybackSpeedChangeEvent();

    /**
     * description: reset all the setting to the default.  			e: error code.
     */
    virtual void resetToFactory(CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::media::BaseType::tBaseError &_e, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> resetToFactoryAsync(ResetToFactoryAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    /**
     * description: set the default playback speed for one audio type. 			type: the audio object
     *   type. 			speed: playback speed. 			e: error code.
     */
    virtual void setPlaybackSpeed(const ::v1::com::harman::media::BaseType::tAudioObjectType &_type, const double &_speed, CommonAPI::CallStatus &_internalCallStatus, ::v1::com::harman::media::BaseType::tBaseError &_e, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> setPlaybackSpeedAsync(const ::v1::com::harman::media::BaseType::tAudioObjectType &_type, const double &_speed, SetPlaybackSpeedAsyncCallback _callback, const CommonAPI::CallInfo *_info);
    /**
     * description: get the default playback speed for one audio type. 			type: the audio object
     *   type. 			speed: playback speed. 			e: error code.
     */
    virtual void getPlaybackSpeed(const ::v1::com::harman::media::BaseType::tAudioObjectType &_type, CommonAPI::CallStatus &_internalCallStatus, double &_speed, ::v1::com::harman::media::BaseType::tBaseError &_e, const CommonAPI::CallInfo *_info);
    virtual std::future<CommonAPI::CallStatus> getPlaybackSpeedAsync(const ::v1::com::harman::media::BaseType::tAudioObjectType &_type, GetPlaybackSpeedAsyncCallback _callback, const CommonAPI::CallInfo *_info);


    virtual void getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const;

private:
   
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusAttribute<LocaleNameAttribute, CommonAPI::DBus::StringDeployment>> localeName_;
    CommonAPI::DBus::DBusObservableAttribute<CommonAPI::DBus::DBusAttribute<VideoPlaybackSpeedAttribute>> videoPlaybackSpeed_;

    CommonAPI::DBus::DBusEvent<PlaybackSpeedChangeEvent, CommonAPI::Deployable<::v1::com::harman::media::BaseType::tAudioObjectType, CommonAPI::EmptyDeployment>, CommonAPI::Deployable<double, CommonAPI::EmptyDeployment>> playbackSpeedChange_;

};

} // namespace media
} // namespace harman
} // namespace com
} // namespace v1

#endif // V1_COM_HARMAN_MEDIA_Media_Setting_DBUS_PROXY_HPP_

