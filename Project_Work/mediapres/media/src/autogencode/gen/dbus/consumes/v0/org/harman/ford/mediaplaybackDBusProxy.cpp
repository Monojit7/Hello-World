/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.dbus .
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v0/org/harman/ford/mediaplaybackDBusProxy.hpp>

namespace v0 {
namespace org {
namespace harman {
namespace ford {

std::shared_ptr<CommonAPI::DBus::DBusProxy> createmediaplaybackDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection) {
	return std::make_shared<mediaplaybackDBusProxy>(_address, _connection);
}

INITIALIZER(registermediaplaybackDBusProxy) {
     CommonAPI::DBus::Factory::get()->registerProxyCreateMethod(
		mediaplayback::getInterface(),
		&createmediaplaybackDBusProxy);
}

mediaplaybackDBusProxy::mediaplaybackDBusProxy(
	const CommonAPI::DBus::DBusAddress &_address,
	const std::shared_ptr<CommonAPI::DBus::DBusProxyConnection> &_connection)
	:	CommonAPI::DBus::DBusProxy(_address, _connection)
,		aPIM_ActiveTrackNum_St_(*this, "onAPIM_ActiveTrackNum_StAttributeChanged", "setAPIM_ActiveTrackNum_StAttribute", "u", "getAPIM_ActiveTrackNum_StAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aPIM_NumberofTracks_St_(*this, "onAPIM_NumberofTracks_StAttributeChanged", "setAPIM_NumberofTracks_StAttribute", "q", "getAPIM_NumberofTracks_StAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aCU_CurrTUBand_St_enum_(*this, "onACU_CurrTUBand_St_enumAttributeChanged", "setACU_CurrTUBand_St_enumAttribute", "i", "getACU_CurrTUBand_St_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aCU_RadioSeekMode2_St_enum_(*this, "onACU_RadioSeekMode2_St_enumAttributeChanged", "setACU_RadioSeekMode2_St_enumAttribute", "i", "getACU_RadioSeekMode2_St_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aCU_CurrentFreq_St_(*this, "onACU_CurrentFreq_StAttributeChanged", "setACU_CurrentFreq_StAttribute", "q", "getACU_CurrentFreq_StAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aCU_CompLogic_St_enum_(*this, "onACU_CompLogic_St_enumAttributeChanged", "setACU_CompLogic_St_enumAttribute", "i", "getACU_CompLogic_St_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		cD_Send_Signals_(*this, "onCD_Send_SignalsAttributeChanged", "(iii)", "getCD_Send_SignalsAttribute", static_cast<::v0::org::harman::ford::mediaplayback_types_::CD_Send_Signals_structDeployment_t*>(nullptr)),
		cD_Request_Signals_(*this, "onCD_Request_SignalsAttributeChanged", "(iiii)", "getCD_Request_SignalsAttribute", static_cast<::v0::org::harman::ford::mediaplayback_types_::CD_Request_Signals_structDeployment_t*>(nullptr)),
		dsp_CutItem_Rq_enum_(*this, "onDsp_CutItem_Rq_enumAttributeChanged", "setDsp_CutItem_Rq_enumAttribute", "i", "getDsp_CutItem_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_ItemNameLength_Rq_(*this, "onDsp_ItemNameLength_RqAttributeChanged", "setDsp_ItemNameLength_RqAttribute", "y", "getDsp_ItemNameLength_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_FolderNumber_Rq_(*this, "onDsp_FolderNumber_RqAttributeChanged", "setDsp_FolderNumber_RqAttribute", "q", "getDsp_FolderNumber_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_SourceSetTrack_Rq_(*this, "onDsp_SourceSetTrack_RqAttributeChanged", "setDsp_SourceSetTrack_RqAttribute", "u", "getDsp_SourceSetTrack_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_FolderNumber3_Rq_(*this, "onDsp_FolderNumber3_RqAttributeChanged", "setDsp_FolderNumber3_RqAttribute", "q", "getDsp_FolderNumber3_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_ItemIndex_Rq_(*this, "onDsp_ItemIndex_RqAttributeChanged", "setDsp_ItemIndex_RqAttribute", "q", "getDsp_ItemIndex_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_PlayFrstTrInFldr_Rq_(*this, "onDsp_PlayFrstTrInFldr_RqAttributeChanged", "setDsp_PlayFrstTrInFldr_RqAttribute", "q", "getDsp_PlayFrstTrInFldr_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		nAV_LoadEjectDisc_Rq_enum_(*this, "onNAV_LoadEjectDisc_Rq_enumAttributeChanged", "setNAV_LoadEjectDisc_Rq_enumAttribute", "i", "getNAV_LoadEjectDisc_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		nAV_SetOperationMode_Rq_enum_(*this, "onNAV_SetOperationMode_Rq_enumAttributeChanged", "setNAV_SetOperationMode_Rq_enumAttribute", "i", "getNAV_SetOperationMode_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		nAV_CDSetIntroScan_Rq_enum_(*this, "onNAV_CDSetIntroScan_Rq_enumAttributeChanged", "setNAV_CDSetIntroScan_Rq_enumAttribute", "i", "getNAV_CDSetIntroScan_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		aCU_Send_Signals_6_(*this, "onACU_Send_Signals_6AttributeChanged", "(qqq)", "getACU_Send_Signals_6Attribute", static_cast<::v0::org::harman::ford::mediaplayback_types_::ACU_Send_Signals_6_structDeployment_t*>(nullptr)),
		aCU_Send_Signals_5_(*this, "onACU_Send_Signals_5AttributeChanged", "(iiiyiii)", "getACU_Send_Signals_5Attribute", static_cast<::v0::org::harman::ford::mediaplayback_types_::ACU_Send_Signals_5_structDeployment_t*>(nullptr)),
		aCU_SendSignals_9_(*this, "onACU_SendSignals_9AttributeChanged", "(u)", "getACU_SendSignals_9Attribute", static_cast<::v0::org::harman::ford::mediaplayback_types_::ACU_SendSignals_9_structDeployment_t*>(nullptr)),
		dsp_ItemNameLength2_Rq_(*this, "onDsp_ItemNameLength2_RqAttributeChanged", "setDsp_ItemNameLength2_RqAttribute", "y", "getDsp_ItemNameLength2_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_FolderContent_Rq_enum_(*this, "onDsp_FolderContent_Rq_enumAttributeChanged", "setDsp_FolderContent_Rq_enumAttribute", "i", "getDsp_FolderContent_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_CutItem2_Rq_enum_(*this, "onDsp_CutItem2_Rq_enumAttributeChanged", "setDsp_CutItem2_Rq_enumAttribute", "i", "getDsp_CutItem2_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_NbrOfItems2_Rq_(*this, "onDsp_NbrOfItems2_RqAttributeChanged", "setDsp_NbrOfItems2_RqAttribute", "y", "getDsp_NbrOfItems2_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_FolderNumber2_Rq_(*this, "onDsp_FolderNumber2_RqAttributeChanged", "setDsp_FolderNumber2_RqAttribute", "q", "getDsp_FolderNumber2_RqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		dsp_StartItemIndexRq_(*this, "onDsp_StartItemIndexRqAttributeChanged", "setDsp_StartItemIndexRqAttribute", "q", "getDsp_StartItemIndexRqAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr)),
		hMI_SetCompression_Rq_enum_(*this, "onHMI_SetCompression_Rq_enumAttributeChanged", "setHMI_SetCompression_Rq_enumAttribute", "i", "getHMI_SetCompression_Rq_enumAttribute", static_cast<CommonAPI::EmptyDeployment*>(nullptr))
{
}

      mediaplaybackDBusProxy::APIM_ActiveTrackNum_StAttribute& mediaplaybackDBusProxy::getAPIM_ActiveTrackNum_StAttribute() {
          return aPIM_ActiveTrackNum_St_;
      }
      mediaplaybackDBusProxy::APIM_NumberofTracks_StAttribute& mediaplaybackDBusProxy::getAPIM_NumberofTracks_StAttribute() {
          return aPIM_NumberofTracks_St_;
      }
      mediaplaybackDBusProxy::ACU_CurrTUBand_St_enumAttribute& mediaplaybackDBusProxy::getACU_CurrTUBand_St_enumAttribute() {
          return aCU_CurrTUBand_St_enum_;
      }
      mediaplaybackDBusProxy::ACU_RadioSeekMode2_St_enumAttribute& mediaplaybackDBusProxy::getACU_RadioSeekMode2_St_enumAttribute() {
          return aCU_RadioSeekMode2_St_enum_;
      }
      mediaplaybackDBusProxy::ACU_CurrentFreq_StAttribute& mediaplaybackDBusProxy::getACU_CurrentFreq_StAttribute() {
          return aCU_CurrentFreq_St_;
      }
      mediaplaybackDBusProxy::ACU_CompLogic_St_enumAttribute& mediaplaybackDBusProxy::getACU_CompLogic_St_enumAttribute() {
          return aCU_CompLogic_St_enum_;
      }
      mediaplaybackDBusProxy::CD_Send_SignalsAttribute& mediaplaybackDBusProxy::getCD_Send_SignalsAttribute() {
          return cD_Send_Signals_;
      }
      mediaplaybackDBusProxy::CD_Request_SignalsAttribute& mediaplaybackDBusProxy::getCD_Request_SignalsAttribute() {
          return cD_Request_Signals_;
      }
      mediaplaybackDBusProxy::Dsp_CutItem_Rq_enumAttribute& mediaplaybackDBusProxy::getDsp_CutItem_Rq_enumAttribute() {
          return dsp_CutItem_Rq_enum_;
      }
      mediaplaybackDBusProxy::Dsp_ItemNameLength_RqAttribute& mediaplaybackDBusProxy::getDsp_ItemNameLength_RqAttribute() {
          return dsp_ItemNameLength_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_FolderNumber_RqAttribute& mediaplaybackDBusProxy::getDsp_FolderNumber_RqAttribute() {
          return dsp_FolderNumber_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_SourceSetTrack_RqAttribute& mediaplaybackDBusProxy::getDsp_SourceSetTrack_RqAttribute() {
          return dsp_SourceSetTrack_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_FolderNumber3_RqAttribute& mediaplaybackDBusProxy::getDsp_FolderNumber3_RqAttribute() {
          return dsp_FolderNumber3_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_ItemIndex_RqAttribute& mediaplaybackDBusProxy::getDsp_ItemIndex_RqAttribute() {
          return dsp_ItemIndex_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_PlayFrstTrInFldr_RqAttribute& mediaplaybackDBusProxy::getDsp_PlayFrstTrInFldr_RqAttribute() {
          return dsp_PlayFrstTrInFldr_Rq_;
      }
      mediaplaybackDBusProxy::NAV_LoadEjectDisc_Rq_enumAttribute& mediaplaybackDBusProxy::getNAV_LoadEjectDisc_Rq_enumAttribute() {
          return nAV_LoadEjectDisc_Rq_enum_;
      }
      mediaplaybackDBusProxy::NAV_SetOperationMode_Rq_enumAttribute& mediaplaybackDBusProxy::getNAV_SetOperationMode_Rq_enumAttribute() {
          return nAV_SetOperationMode_Rq_enum_;
      }
      mediaplaybackDBusProxy::NAV_CDSetIntroScan_Rq_enumAttribute& mediaplaybackDBusProxy::getNAV_CDSetIntroScan_Rq_enumAttribute() {
          return nAV_CDSetIntroScan_Rq_enum_;
      }
      mediaplaybackDBusProxy::ACU_Send_Signals_6Attribute& mediaplaybackDBusProxy::getACU_Send_Signals_6Attribute() {
          return aCU_Send_Signals_6_;
      }
      mediaplaybackDBusProxy::ACU_Send_Signals_5Attribute& mediaplaybackDBusProxy::getACU_Send_Signals_5Attribute() {
          return aCU_Send_Signals_5_;
      }
      mediaplaybackDBusProxy::ACU_SendSignals_9Attribute& mediaplaybackDBusProxy::getACU_SendSignals_9Attribute() {
          return aCU_SendSignals_9_;
      }
      mediaplaybackDBusProxy::Dsp_ItemNameLength2_RqAttribute& mediaplaybackDBusProxy::getDsp_ItemNameLength2_RqAttribute() {
          return dsp_ItemNameLength2_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_FolderContent_Rq_enumAttribute& mediaplaybackDBusProxy::getDsp_FolderContent_Rq_enumAttribute() {
          return dsp_FolderContent_Rq_enum_;
      }
      mediaplaybackDBusProxy::Dsp_CutItem2_Rq_enumAttribute& mediaplaybackDBusProxy::getDsp_CutItem2_Rq_enumAttribute() {
          return dsp_CutItem2_Rq_enum_;
      }
      mediaplaybackDBusProxy::Dsp_NbrOfItems2_RqAttribute& mediaplaybackDBusProxy::getDsp_NbrOfItems2_RqAttribute() {
          return dsp_NbrOfItems2_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_FolderNumber2_RqAttribute& mediaplaybackDBusProxy::getDsp_FolderNumber2_RqAttribute() {
          return dsp_FolderNumber2_Rq_;
      }
      mediaplaybackDBusProxy::Dsp_StartItemIndexRqAttribute& mediaplaybackDBusProxy::getDsp_StartItemIndexRqAttribute() {
          return dsp_StartItemIndexRq_;
      }
      mediaplaybackDBusProxy::HMI_SetCompression_Rq_enumAttribute& mediaplaybackDBusProxy::getHMI_SetCompression_Rq_enumAttribute() {
          return hMI_SetCompression_Rq_enum_;
      }

    
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::ACU_CurrPreset2_St_method(const uint8_t &_ACU_CurrPreset2_St, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_ACU_CurrPreset2_St(_ACU_CurrPreset2_St, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "ACU_CurrPreset2_St_method",
        "y",
deploy_ACU_CurrPreset2_St,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::ACU_CurrentPSName_St_method(const uint64_t &_ACU_CurrentPSName_St, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<uint64_t, CommonAPI::EmptyDeployment> deploy_ACU_CurrentPSName_St(_ACU_CurrentPSName_St, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint64_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "ACU_CurrentPSName_St_method",
        "t",
deploy_ACU_CurrentPSName_St,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::ACU_CurrTUDABBlock_St_method(const uint16_t &_ACU_CurrTUDABBlock_St, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment> deploy_ACU_CurrTUDABBlock_St(_ACU_CurrTUDABBlock_St, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint16_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "ACU_CurrTUDABBlock_St_method",
        "q",
deploy_ACU_CurrTUDABBlock_St,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::ACU_ActServiceLink_St_method(const ::v0::org::harman::ford::mediaplayback_types::ACU_ActServiceLink_St_enum &_aCU_ActServiceLink_St_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::ACU_ActServiceLink_St_enum, CommonAPI::EmptyDeployment> deploy_aCU_ActServiceLink_St_enum(_aCU_ActServiceLink_St_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::ACU_ActServiceLink_St_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "ACU_ActServiceLink_St_method",
        "i",
deploy_aCU_ActServiceLink_St_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::ACU_CurrTUDRService2_St_method(const ::v0::org::harman::ford::mediaplayback_types::ACU_CurrTUDRService2_St_enum &_aCU_CurrTUDRService2_St_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::ACU_CurrTUDRService2_St_enum, CommonAPI::EmptyDeployment> deploy_aCU_CurrTUDRService2_St_enum(_aCU_CurrTUDRService2_St_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::ACU_CurrTUDRService2_St_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "ACU_CurrTUDRService2_St_method",
        "i",
deploy_aCU_CurrTUDRService2_St_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::Dsp_GetCDTOCDData_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::Dsp_GetCDTOCDData_Rq_enum &_dsp_GetCDTOCDData_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_GetCDTOCDData_Rq_enum, CommonAPI::EmptyDeployment> deploy_dsp_GetCDTOCDData_Rq_enum(_dsp_GetCDTOCDData_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_GetCDTOCDData_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "Dsp_GetCDTOCDData_Rq_method",
        "i",
deploy_dsp_GetCDTOCDData_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::Dsp_AudioSourceSel_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel_Rq_enum &_dsp_AudioSourceSel_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel_Rq_enum, CommonAPI::EmptyDeployment> deploy_dsp_AudioSourceSel_Rq_enum(_dsp_AudioSourceSel_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "Dsp_AudioSourceSel_Rq_method",
        "i",
deploy_dsp_AudioSourceSel_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::Dsp_AudioSourceSel3_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel3_Rq_enum &_dsp_AudioSourceSel3_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel3_Rq_enum, CommonAPI::EmptyDeployment> deploy_dsp_AudioSourceSel3_Rq_enum(_dsp_AudioSourceSel3_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel3_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "Dsp_AudioSourceSel3_Rq_method",
        "i",
deploy_dsp_AudioSourceSel3_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::NAV_LoadEjectMode_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::NAV_LoadEjectMode_Rq_enum &_nAV_LoadEjectMode_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_LoadEjectMode_Rq_enum, CommonAPI::EmptyDeployment> deploy_nAV_LoadEjectMode_Rq_enum(_nAV_LoadEjectMode_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_LoadEjectMode_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "NAV_LoadEjectMode_Rq_method",
        "i",
deploy_nAV_LoadEjectMode_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::NAV_CDSetShuffle_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::NAV_CDSetShuffle_Rq_enum &_nAV_CDSetShuffle_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_CDSetShuffle_Rq_enum, CommonAPI::EmptyDeployment> deploy_nAV_CDSetShuffle_Rq_enum(_nAV_CDSetShuffle_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_CDSetShuffle_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "NAV_CDSetShuffle_Rq_method",
        "i",
deploy_nAV_CDSetShuffle_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::NAV_CDSetRepeat_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::NAV_CDSetRepeat_Rq_enum &_nAV_CDSetRepeat_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_CDSetRepeat_Rq_enum, CommonAPI::EmptyDeployment> deploy_nAV_CDSetRepeat_Rq_enum(_nAV_CDSetRepeat_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::NAV_CDSetRepeat_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "NAV_CDSetRepeat_Rq_method",
        "i",
deploy_nAV_CDSetRepeat_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::DISP_SetVolume_Rq_method(const uint8_t &_DISP_SetVolume_Rq, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment> deploy_DISP_SetVolume_Rq(_DISP_SetVolume_Rq, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<uint8_t, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "DISP_SetVolume_Rq_method",
        "y",
deploy_DISP_SetVolume_Rq,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::Dsp_AudioSourceSel2_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel2_Rq_enum &_dsp_AudioSourceSel2_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel2_Rq_enum, CommonAPI::EmptyDeployment> deploy_dsp_AudioSourceSel2_Rq_enum(_dsp_AudioSourceSel2_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::Dsp_AudioSourceSel2_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "Dsp_AudioSourceSel2_Rq_method",
        "i",
deploy_dsp_AudioSourceSel2_Rq_enum,
_internalCallStatus);
}
    /**
     * description: No Information Available
     */
    void mediaplaybackDBusProxy::HMI_SkipTrack_Rq_method(const ::v0::org::harman::ford::mediaplayback_types::HMI_SkipTrack_Rq_enum &_hMI_SkipTrack_Rq_enum, CommonAPI::CallStatus &_internalCallStatus) {
        CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::HMI_SkipTrack_Rq_enum, CommonAPI::EmptyDeployment> deploy_hMI_SkipTrack_Rq_enum(_hMI_SkipTrack_Rq_enum, static_cast<CommonAPI::EmptyDeployment*>(nullptr));
        CommonAPI::DBus::DBusProxyHelper<
            CommonAPI::DBus::DBusSerializableArguments<
            CommonAPI::Deployable<::v0::org::harman::ford::mediaplayback_types::HMI_SkipTrack_Rq_enum, CommonAPI::EmptyDeployment >
            >,
            CommonAPI::DBus::DBusSerializableArguments<
            >
        	>::callMethod(
        *this,
        "HMI_SkipTrack_Rq_method",
        "i",
deploy_hMI_SkipTrack_Rq_enum,
_internalCallStatus);
}


void mediaplaybackDBusProxy::getOwnVersion(uint16_t& ownVersionMajor, uint16_t& ownVersionMinor) const {
          ownVersionMajor = 0;
          ownVersionMinor = 1;
      }

      } // namespace ford
      } // namespace harman
      } // namespace org
      } // namespace v0
