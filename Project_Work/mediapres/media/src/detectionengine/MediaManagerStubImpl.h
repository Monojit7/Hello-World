/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Jun 29 09:52:43 IST 2016
 */

#ifndef V1_COM_HARMAN_MMPRES_MEDIAMANAGERSTUBIMPL_HPP
#define V1_COM_HARMAN_MMPRES_MEDIAMANAGERSTUBIMPL_HPP

#include<detectionengine/MediaDetectionEngine.h>

class MediaDetectionEngine;

namespace v1 {
namespace com {
namespace harman {
namespace mmpres {

class MediaManagerStubImpl : public v1::com::harman::mmpres::MediaManagerStubDefault
{

public:
	MediaManagerStubImpl();
    virtual ~MediaManagerStubImpl();

	virtual void getSlots(const std::shared_ptr<CommonAPI::ClientId> _client, getSlotsReply_t);

	/**
	* description: Emitted if there is a state change for any slot.

	returns:
	*   slot:	Slot data
	*/
	virtual void fireSlotUpdateEvent(const ::v3::com::harman::mmpres::MMPresTypes::tSlot &_slot);

	virtual void getAdditionalDeviceInfo(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t slotId, getAdditionalDeviceInfoReply_t);

private : 
	FacadeHelper<MediaDetectionEngine> mDetect; 
};

} // namespace mmpres
} // namespace harman
} // namespace com
} // namespace v1

#endif //V1_COM_HARMAN_MMPRES_MEDIAMANAGERSTUBIMPL_HPP
