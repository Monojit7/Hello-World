/**
 * generated by Voice CodeGen Version: R1_v1.3.0
 * generated on: Wed Jun 29 09:52:43 IST 2016
 */

#include <detectionengine/MediaManagerStubImpl.h>

namespace v1 {
namespace com {
namespace harman {
namespace mmpres {

MediaManagerStubImpl::MediaManagerStubImpl()
{
    LOG_INFO(LOG_CONTEXT_MEDIA, "MediaManagerStubImpl::MediaManagerStubImpl");
	mDetect->setSlotUpdateHandler(std::bind( &MediaManagerStubImpl::fireSlotUpdateEvent,this,std::placeholders::_1));
}

MediaManagerStubImpl::~MediaManagerStubImpl()
{

}

void MediaManagerStubImpl::getSlots(const std::shared_ptr<CommonAPI::ClientId> _client, getSlotsReply_t reply)
{
	reply(mDetect->getSlotList()); 
}

void MediaManagerStubImpl::fireSlotUpdateEvent(const ::v3::com::harman::mmpres::MMPresTypes::tSlot &_slot)
{
	MediaManagerStubDefault::fireSlotUpdateEvent(_slot); 
}

void MediaManagerStubImpl::getAdditionalDeviceInfo(const std::shared_ptr<CommonAPI::ClientId> _client, uint8_t slotId, getAdditionalDeviceInfoReply_t reply)
{
	reply(mDetect->getAdditionalDevDetails(slotId));
}


} // namespace mmpres
} // namespace harman
} // namespace com
} // namespace v1

